import pyro, numpy as np, torch, pyro.distributions   as dist, torch.nn as nn
from pyro.optim import Adam
import torch.distributions.constraints as constraints
from pyro.infer import SVI
if pyro.__version__ > '0.1.2': from pyro.infer import Trace_ELBO
from pyro.contrib.autoguide import *
import math
def amb(x):
    return x.data.numpy().tolist() if isinstance(x, torch.Tensor) else x
y= np.array([-0.3173372222, -1.82017432091, -0.750362429348, -1.0384413851, -1.05965645057, -0.156027355843, -0.996145743449, -0.720946510306, -1.28743623456, -0.932843114013, -0.304423176057, -0.174656969816, -1.62791790202, -1.44098269192, -0.807443943878, -0.285489943183, -2.03902011814, -0.305081642687, -0.103903482671, -0.0797589510444, -0.209922362957, -0.250120768583, -0.284269068709, -1.8425956413, -0.204054489968, -0.684702553666, -0.291976630705, -0.0869024422037, -0.00210315862044, -2.06130928627, -1.62281128088, -0.364187950646, -1.14897297081, -0.0972619240073, -0.831326008652, -0.14901063197, -0.107839126857, -1.254863545, -1.6554056481, -1.65002952734, -0.816551932035, -1.38628118904, -1.12401094721, -0.00541128844836, -1.05582438678, -0.0430015716825, -1.71670345564, -1.29401141872, -0.603283062397, -0.559934007283, -3.08459326078, -0.96311159044, -0.738304528985, -0.597061486781, -1.07383866762, -1.15495596939, -1.37975961513, -1.90740415837, -0.0651178308147, -0.94910779086, -1.02905744987, -0.792245366169, -0.151334325125, -0.203383365632, -0.945565953543, -0.874187216001, -0.0948180109978, -0.462024820873, -0.458325247544, -0.224288225587, -0.339211577715, -0.272099644956, -1.4623558474, -0.429867664191, -0.323814730984, -0.511377711506, -1.33036403247, -0.421130104675, -1.10081761086, -0.771990936174, -1.02085785931, -0.584265502804, -0.287973145043, -1.52185208574, -0.929152553896, -1.31398729598, -0.136399315996, -0.948217511292, -0.820197356877, -0.511755415292, -0.570610177167, -0.468717877256, -2.23195069787, -0.229046824902, -0.812658258273, -0.474841264001, -0.719241682566, -0.0994987228118, -0.730374725454, -0.462223234507, -0.712894871427, -0.183678211185, -0.537669316121, -0.593982022979, -0.488951350016, -0.365293162406, -1.76615737663, -0.30215838505, -1.25792026488, -1.11537540482, -0.161963620325, -1.64855705111, -1.91438694866, -0.913158314527, -1.06952190721, -0.720679348824, -0.370388369771, -1.25831269758, -1.46918235415, -0.0597718298265, -0.444466582348, -3.27195407631, -0.630794111806, -1.67824694213, -1.18754002287, -1.89240513297, -0.770962794994, -1.26327026639, -1.01659835347, -1.52903595056, -0.930838508776, -0.231685468657, -0.904590021782, -0.325203919902, -0.683947005898, -0.121675887844, -0.749521023017, -0.0653052199415, -1.18975040801, -0.308458209377, -0.450621233361, -0.944876654444, -0.990615574229, -0.516986487771, -0.608101216679, -0.206411384317, -0.679616336704, -0.180057154943, -1.92192387011, -1.40694371951, -0.34845678903, -0.622603657377, -0.455547910701, -1.86399289291, -0.275477963016, -1.34513367962, -1.74116556831, -1.25316877764, -0.692600520765, -1.14324760522, -0.0117247219109, -0.212013886244, -1.40283214399, -0.0565653406509, -0.155010516318, -0.0718857151773, -0.809817899075, -0.401592498986, -0.549082238457, -0.160447346744, -1.50001211976, -1.62123136032, -1.03877966871, -0.0380276060077, -0.692046883742, -1.90710606336, -0.383283662968, -0.395390677968, -1.63119852434, -1.42464791858, -1.11043792151, -0.108595563385, -1.69692356878, -2.05927518856, -0.308479801218, -0.52636055923, -0.710821953181, -0.929378281928, -0.18484673876, -1.20380635356, -1.32969654456, -1.68151953896, -0.585647847515, -0.576033739727, -0.757569965464, -0.957132809272, -1.25233912113, -0.213009862534, -0.38339308057, -0.31042531223, -0.997621927962, -0.668961761524, -0.010533894624, -2.45126604037, -0.637901361569, -0.689859737852, -2.49654683581, -1.60568469331, -0.0337537745071, -0.106449328457, -0.489134505135, -0.327444903024, -1.04786531373, -0.435059718127, -1.25626185545, -2.27829459952, -2.22950900072, -0.385529295379, -0.957128844698, -0.520978028916, -1.94135981072, -0.714500269725, -0.306082568954, -0.497117532196, -0.677338249285, -1.58917336204, -0.529500610588, -0.44342516234, -0.553629285047, -0.52682648943, -0.366748822393, -0.151604831451, -0.0359404535889, -0.441002063403, -1.71191985854, -0.967524139385, -0.967148619563, -0.979946650587, -1.54172467426, -0.875137360528, -0.308805993582, -0.239277677712, -0.89491912825, -0.498860191511, -1.33014676362, -0.779771989371, -0.217839367876, -0.349904564416, -0.681762231691, -0.916498622934, -0.298930151659, -1.79073378159, -0.765777490974, -1.03807063693, -1.46236209094, -0.215004621683, -1.04747648443, -0.7321244442, -0.308314389898, -1.6314561091, -0.588367853178, -0.594839408583, -0.489729547684, -0.00322345502936, -1.34895345475, -1.55982937827, -0.768238545901, -0.0415646499726, -1.04324095122, -0.747191154084, -1.57253601899, -2.22511439373, -0.446058389078, -2.11063696089, -1.14700594638, -0.61817166452, -0.756052750124, -1.27037810636, -0.682793033112, -0.257873789269, -1.32200013534, -1.43932701489, -0.696718095682, -0.426154724705, -0.544710791088, -0.608288334431, -1.55925937143, -0.000391928066821, -0.0131641974538, -1.04199977326, -1.01727200018, -0.33183522201, -1.19365266625, -0.653702447028, -0.226220798392, -0.246274502628, -1.26985229198, -0.304147524487, -0.701686347531, -0.145111914341, -0.0820807399613, -1.27334300709, -0.258970840314, -0.105016594467, -0.382125547114, -0.476216924793, -1.59927867947, -0.0431743872503, -1.51424775871, -0.172503772275, -1.7661117411, -2.13565820131, -0.909419584944, -0.598655728407, -0.127301790026, -1.64790598256, -0.364364892774, -0.60209903161, -0.393771067454, -0.474904703759, -0.0229314322078, -0.101586074725, -0.38572272805, -0.983524244077, -2.38265807253, -0.460966439438, -0.686615094771, -1.05553223007, -1.17857573856, -1.13339210572, -0.588899997094, -0.52068915504, -2.13312396734, -0.730665150738, -0.185359616701, -0.452750616312, -1.40282839277, -0.348217987638, -0.844759608486, -1.8023844301, -0.718032332112, -0.372280793566, -1.66763530793, -2.04454209913, -0.259715958237, -0.487287673627, -0.0629340730085, -0.840281406498, -0.447352573119, -0.246676657557, -0.582365304359, -1.29928830814, -1.63184047066, -0.650180602054, -0.674762769894, -0.869879723727, -0.196268545164, -1.87889712235, -0.952360596304, -0.304217879317, -1.67511075318, -0.519873632213, -1.4134806288, -0.353546522459, -1.67107407886, -0.604483630102, -0.0999237896055, -0.370449971817, -1.36574334008, -0.724400357741, -1.46590530856, -0.561271556361, -0.813727404661, -1.37419730259, -1.23700448942, -0.480174644806, -1.23775341113, -0.380947197758, -0.413889405489, -1.04092154724, -0.753347117235, -0.287840021989, -0.336549295852, -0.068951452687, -2.45661781101, -0.641866797288, -0.249984975716, -1.51911825018, -0.830573542539, -3.98818642729, -1.88352150303, -0.907352999023, -1.01709383646, -0.545934146157, -0.539321825763, -0.130466286213, -1.34610810345, -1.34102252851, -0.871123272363, -1.06864770355, -2.04766493914, -0.00628560518229, -1.40197689028, -4.05486429531, -1.08100613288, -0.327640692358, -1.01354613702, -0.567566569739, -2.73914629454, -1.21710290133, -0.886807653422, -0.320445925276, -0.624139925555, -2.79734374697, -0.00777808496573, -0.716742797479, -0.138173469506, -0.740023805262, -0.0578476342006, -0.0117398802243, -1.24942649054, -0.111731169725, -0.988265588874, -0.986129833197, -0.6261087884, -1.29586522438, -0.254905529747, -0.475852906254, -0.52346253029, -1.18610166748, -0.0201333605244, -1.04294702986, -0.478173925774, -0.144266664118, -0.267388109885, -0.412769705035, -0.755590474766, -1.74017672184, -0.405905539788, -0.963798169487, -0.786703191458, -1.09844576376, -1.50063335224, -0.0292253187298, -0.96753362309, -0.0711616413039, -0.875778277506, -2.4811490867, -0.858419116411, -0.84992840301, -0.351392537821, -0.728465677288, -0.901991179209, -0.652451010122, -0.00278637909313, -1.42831865677, -0.0788790049756, -0.845896728511, -0.503108025082, -1.01549366426, -0.850663251563, -0.220894920048, -0.680954215073, -0.535674750242, -1.35332198504, -1.42932908628, -2.28619052553, -0.299263098494, -1.11673696105, -0.0196551930318, -1.03548638496, -0.885382649427, -0.903784592831, -1.28264750783, -1.31937074613, -0.105307278991, -1.30471151457, -0.831287262567, -0.286768961179, -0.76212105081, -0.818828540954, -0.602859502595, -0.96349564915, -0.479028498324, -1.13398862345, -0.24907986132, -0.706414504211, -1.00938658442, -1.42991964431, -0.863517826642, -0.528933439423, -0.616682889854, -1.02440235962, -0.35173270807, -0.536720147553, -1.0478466102, -0.17495458631, -0.519085662321, -0.552962422893, -1.13190479968], dtype=np.float32).reshape(500,1)
y=torch.tensor(y)
U=0.0
U=torch.tensor(U)
N=500
N=torch.tensor(N)
def model(y,U,N):
    mu = pyro.sample('mu'.format(''), dist.Normal(torch.tensor(1234.0)*torch.ones([amb(1)]),torch.tensor(1234.0)*torch.ones([amb(1)])))
    sigma = pyro.sample('sigma'.format(''), dist.Normal(torch.tensor(1234.0)*torch.ones([amb(1)]),torch.tensor(1234.0)*torch.ones([amb(1)])))
    for n in range(1, N+1):
        pyro.sample('obs_{0}_100'.format(n), dist.Normal(mu,sigma), obs=y[n-1])
    
def guide(y,U,N):
    arg_1 = pyro.param('arg_1', torch.ones((amb(1))), constraint=constraints.positive)
    arg_2 = pyro.param('arg_2', torch.ones((amb(1))), constraint=constraints.positive)
    mu = pyro.sample('mu'.format(''), dist.Beta(arg_1,arg_2))
    arg_3 = pyro.param('arg_3', torch.ones((amb(1))), constraint=constraints.positive)
    sigma = pyro.sample('sigma'.format(''), dist.Exponential(arg_3))
    for n in range(1, N+1):
        pass
    
    pass
    return { "mu": mu,"sigma": sigma, }
optim = Adam({'lr': 0.05})
svi = SVI(model, guide, optim, loss=Trace_ELBO() if pyro.__version__ > '0.1.2' else 'ELBO')
for i in range(4000):
    loss = svi.step(y,U,N)
    if ((i % 1000) == 0):
        print(loss)
for name in pyro.get_param_store().get_all_param_names():
    print(('{0} : {1}'.format(name, pyro.param(name).data.numpy())))
print('mu_mean', np.array2string(dist.Beta(pyro.param('arg_1'), pyro.param('arg_2')).mean.detach().numpy(), separator=','))
print('sigma_mean', np.array2string(dist.Exponential(pyro.param('arg_3')).mean.detach().numpy(), separator=','))
np.set_printoptions(threshold=np.inf)
with open('samples','w') as samplefile:
    samplefile.write('mu:')
    samplefile.write(np.array2string(np.array([guide(y,U,N)['mu'].data.numpy() for _ in range(1000)]), separator=',').replace('\n',''))
    samplefile.write('\n')
    samplefile.write('sigma:')
    samplefile.write(np.array2string(np.array([guide(y,U,N)['sigma'].data.numpy() for _ in range(1000)]), separator=',').replace('\n',''))
    samplefile.write('\n')
