M : 318
T : 5
y: [[0,0,0,1,0],[0,0,0,0,0],[1,0,1,0,0],[0,0,0,0,0],[1,0,1,1,0],[0,0,0,0,1],[0,0,1,1,0],[0,0,0,0,0],[0,0,0,1,0],[1,0,0,0,1],[0,1,1,0,0],[1,0,0,0,0],[1,0,1,0,0],[0,0,0,0,1],[0,0,0,1,0],[0,0,1,0,1],[0,0,0,1,0],[0,0,0,0,0],[0,0,1,0,1],[1,1,0,0,1],[1,1,1,1,0],[0,0,1,0,0],[0,1,0,1,0],[0,1,0,1,0],[0,0,1,0,1],[0,0,0,0,1],[0,1,0,1,0],[0,0,0,0,0],[0,1,0,1,0],[1,0,1,0,0],[0,0,0,1,1],[0,0,1,0,1],[0,1,1,1,1],[1,1,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[1,0,1,0,1],[0,0,0,1,0],[1,1,0,1,0],[0,0,0,0,1],[0,0,1,0,0],[1,0,0,1,0],[0,1,0,0,0],[0,1,0,1,0],[1,1,0,0,0],[0,0,0,0,0],[1,0,0,0,1],[0,1,0,1,0],[1,0,0,1,0],[0,0,0,1,1],[1,0,0,0,0],[1,0,0,1,1],[0,0,1,0,1],[0,0,1,0,1],[1,0,0,0,0],[0,0,1,0,1],[0,0,0,0,1],[1,1,1,0,0],[0,0,0,1,0],[1,0,0,1,0],[0,0,1,0,0],[1,0,1,1,1],[0,1,1,0,0],[0,1,1,0,1],[1,1,0,1,0],[0,1,0,0,0],[0,0,1,0,1],[1,0,1,1,1],[0,1,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,1,1,0],[0,1,0,1,1],[1,0,1,0,1],[0,0,0,1,0],[1,0,0,0,0],[1,1,0,1,0],[0,0,1,1,0],[1,1,1,0,1],[0,1,0,1,0],[1,1,1,1,0],[0,0,0,0,1],[0,0,0,0,0],[0,0,0,1,0],[1,0,0,1,0],[0,1,0,0,0],[1,1,1,0,0],[1,1,0,0,0],[1,1,1,1,1],[1,0,1,0,1],[1,1,0,0,0],[0,1,0,0,1],[1,0,0,0,1],[0,1,0,1,0],[0,1,0,0,0],[1,0,1,1,1],[1,1,0,0,1],[0,1,1,0,0],[1,1,0,1,0],[1,1,0,0,1],[1,0,0,0,0],[0,1,1,0,0],[0,1,1,1,1],[1,0,0,0,1],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,1],[0,0,1,0,0],[1,0,1,1,0],[1,0,1,0,1],[0,1,0,1,1],[0,0,1,1,0],[1,0,0,0,0],[0,1,0,0,0],[1,0,1,1,1],[0,0,1,0,0],[1,0,1,1,0],[1,0,1,0,1],[0,0,1,1,0],[1,0,1,0,1],[0,1,0,1,0],[0,0,1,0,0],[0,0,1,0,1],[0,0,0,1,0],[0,1,1,1,0],[0,0,1,0,1],[0,1,0,1,0],[1,1,0,0,0],[0,1,0,1,1],[1,0,0,0,0],[0,0,1,0,1],[0,1,0,1,0],[1,0,1,1,1],[0,0,0,1,1],[1,0,1,1,1],[0,0,0,0,0],[1,0,0,1,0],[1,0,1,0,0],[0,1,0,0,1],[0,1,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,1,0,0],[0,0,0,0,0],[0,1,0,0,0],[1,0,0,0,0],[0,0,1,0,0],[0,0,1,1,1],[0,1,1,0,0],[0,0,0,0,0],[0,1,0,1,1],[1,1,1,0,0],[0,0,1,1,0],[0,0,1,0,1],[0,1,1,1,0],[1,0,0,0,0],[0,0,0,0,0],[1,0,0,0,0],[1,1,0,0,1],[1,0,1,1,0],[0,0,1,0,0],[0,0,0,0,1],[1,1,0,0,0],[0,0,1,0,0],[1,0,0,0,0],[0,0,0,0,1],[0,1,1,0,0],[0,0,0,1,1],[0,1,1,0,1],[0,1,0,1,1],[0,0,1,0,0],[1,1,0,1,0],[1,1,0,1,1],[1,0,1,0,0],[0,0,1,0,1],[0,1,0,1,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0]] [M,T]
transformeddata {
  int<lower=0> s[M]
  int<lower=0> C
  C = 0
  for (i in 1:M) {
    s[i] = sum(y[i])
    if (s[i] > 0)
      C = C + 1
  }
}

omega := normal(1234.0,1234.0)<lower=0,upper=1>
p := normal(1234.0,1234.0)<lower=0,upper=1>
c := normal(1234.0,1234.0)<lower=0,upper=1>

transformedparam {
  vector<lower=0,upper=1>[T] p_eff[M]
  for (i in 1:M) {
    p_eff[i,1] = p    
    for (j in 2:T){
      p_eff[i,j] = (1 - y[i,j - 1]) * p + y[i,j - 1] * c
      }
  }
}


for (i in 1:M){
if (s[i] > 0){
  target = target + bernoulli_lpmf(1 , omega)
          + bernoulli_lpmf(y[i] , p_eff[i])
          }
else{
  target =  target + log_sum_exp(bernoulli_lpmf(1 , omega)
                        + bernoulli_lpmf(0 ,p_eff[i]),
                        bernoulli_lpmf(0 ,omega))
}
}

generatedquantities{ 
  float omega_nd
  int<lower=C,upper=M> N
  float trap_response
  omega_nd = (omega * (1 - p)^T) / (omega * (1 - p)^T + (1 - omega))
   N = C + binomial_rng(M - C,omega_nd)
  trap_response = c - p
}
