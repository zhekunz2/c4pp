import pyro, numpy as np, torch, pyro.distributions   as dist, torch.nn as nn
from pyro.optim import Adam
import torch.distributions.constraints as constraints
from pyro.infer import SVI
if pyro.__version__ > '0.1.2': from pyro.infer import Trace_ELBO
from pyro.contrib.autoguide import *
import math
def amb(x):
    return x.data.numpy().tolist() if isinstance(x, torch.Tensor) else x
N_obs=1739
N_obs=torch.tensor(N_obs)
N_cens=245
N_cens=torch.tensor(N_cens)
weight= np.array([140.0, 150.0, 200.0, 125.0, 126.0, 200.0, 110.0, 165.0, 190.0, 125.0, 200.0, 200.0, 176.0, 200.0, 160.0, 200.0, 107.0, 170.0, 144.0, 193.0, 200.0, 130.0, 100.0, 123.0, 165.0, 130.0, 120.0, 160.0, 172.0, 135.0, 180.0, 112.0, 200.0, 190.0, 145.0, 120.0, 118.0, 114.0, 170.0, 166.0, 124.0, 175.0, 120.0, 126.0, 184.0, 150.0, 150.0, 200.0, 200.0, 180.0, 158.0, 200.0, 150.0, 130.0, 146.0, 185.0, 160.0, 180.0, 135.0, 168.0, 138.0, 200.0, 115.0, 135.0, 150.0, 120.0, 165.0, 130.0, 170.0, 140.0, 145.0, 200.0, 145.0, 150.0, 100.0, 105.0, 120.0, 160.0, 105.0, 200.0, 145.0, 170.0, 183.0, 150.0, 115.0, 138.0, 120.0, 195.0, 130.0, 140.0, 180.0, 115.0, 150.0, 118.0, 155.0, 155.0, 126.0, 200.0, 130.0, 130.0, 123.0, 110.0, 200.0, 130.0, 190.0, 116.0, 170.0, 190.0, 200.0, 90.0, 200.0, 135.0, 140.0, 120.0, 125.0, 112.0, 130.0, 200.0, 98.0, 138.0, 123.0, 105.0, 200.0, 140.0, 173.0, 185.0, 130.0, 135.0, 190.0, 190.0, 135.0, 115.0, 150.0, 150.0, 125.0, 162.0, 137.0, 125.0, 80.0, 160.0, 160.0, 125.0, 110.0, 133.0, 180.0, 135.0, 130.0, 120.0, 150.0, 110.0, 128.0, 185.0, 200.0, 155.0, 135.0, 135.0, 130.0, 132.0, 103.0, 150.0, 130.0, 128.0, 155.0, 155.0, 140.0, 160.0, 185.0, 130.0, 105.0, 145.0, 124.0, 170.0, 126.0, 142.0, 130.0, 130.0, 100.0, 200.0, 160.0, 140.0, 120.0, 123.0, 118.0, 175.0, 150.0, 116.0, 200.0, 155.0, 125.0, 150.0, 135.0, 158.0, 160.0, 158.0, 185.0, 172.0, 130.0, 150.0, 200.0, 165.0, 115.0, 195.0, 120.0, 200.0, 135.0, 133.0, 200.0, 200.0, 150.0, 130.0, 140.0, 170.0, 115.0, 175.0, 170.0, 185.0, 169.0, 160.0, 130.0, 112.0, 140.0, 137.0, 170.0, 160.0, 154.0, 185.0, 140.0, 118.0, 148.0, 165.0, 130.0, 160.0, 185.0, 190.0, 180.0, 175.0, 150.0, 110.0, 200.0, 150.0, 136.0, 170.0, 115.0, 200.0, 164.0, 185.0, 185.0, 150.0, 130.0, 180.0, 170.0, 128.0, 175.0, 147.0, 128.0, 180.0, 172.0, 125.0, 166.0, 175.0, 105.0, 125.0, 145.0, 138.0, 160.0, 150.0, 165.0, 200.0, 200.0, 145.0, 140.0, 105.0, 137.0, 150.0, 150.0, 170.0, 143.0, 178.0, 180.0, 135.0, 122.0, 180.0, 145.0, 164.0, 150.0, 142.0, 175.0, 175.0, 195.0, 150.0, 110.0, 195.0, 165.0, 102.0, 135.0, 150.0, 158.0, 160.0, 142.0, 200.0, 125.0, 128.0, 160.0, 145.0, 200.0, 185.0, 170.0, 125.0, 115.0, 180.0, 170.0, 150.0, 107.0, 135.0, 130.0, 200.0, 135.0, 130.0, 200.0, 175.0, 175.0, 175.0, 118.0, 123.0, 136.0, 200.0, 200.0, 189.0, 180.0, 165.0, 105.0, 140.0, 165.0, 187.0, 188.0, 145.0, 170.0, 125.0, 112.0, 135.0, 185.0, 175.0, 185.0, 170.0, 194.0, 155.0, 145.0, 153.0, 155.0, 120.0, 112.0, 120.0, 163.0, 130.0, 170.0, 122.0, 105.0, 138.0, 170.0, 120.0, 200.0, 138.0, 190.0, 185.0, 130.0, 170.0, 185.0, 128.0, 170.0, 160.0, 135.0, 150.0, 135.0, 185.0, 117.0, 150.0, 190.0, 154.0, 170.0, 140.0, 165.0, 112.0, 180.0, 180.0, 128.0, 170.0, 200.0, 140.0, 190.0, 185.0, 135.0, 132.0, 180.0, 200.0, 130.0, 125.0, 200.0, 105.0, 176.0, 200.0, 200.0, 200.0, 110.0, 148.0, 200.0, 165.0, 110.0, 128.0, 150.0, 150.0, 165.0, 123.0, 170.0, 116.0, 117.0, 160.0, 122.0, 154.0, 185.0, 95.0, 115.0, 125.0, 200.0, 180.0, 160.0, 150.0, 200.0, 200.0, 125.0, 148.0, 120.0, 140.0, 160.0, 180.0, 200.0, 180.0, 110.0, 123.0, 150.0, 135.0, 110.0, 168.0, 170.0, 154.0, 150.0, 170.0, 168.0, 160.0, 150.0, 108.0, 137.0, 122.0, 135.0, 130.0, 165.0, 134.0, 180.0, 165.0, 200.0, 200.0, 140.0, 160.0, 112.0, 112.0, 190.0, 140.0, 108.0, 140.0, 125.0, 132.0, 135.0, 170.0, 171.0, 120.0, 196.0, 195.0, 150.0, 175.0, 153.0, 106.0, 145.0, 175.0, 115.0, 145.0, 118.0, 129.0, 160.0, 98.0, 123.0, 200.0, 125.0, 200.0, 185.0, 145.0, 140.0, 160.0, 200.0, 195.0, 138.0, 160.0, 150.0, 128.0, 145.0, 126.0, 136.0, 140.0, 125.0, 200.0, 140.0, 135.0, 180.0, 180.0, 165.0, 130.0, 135.0, 125.0, 165.0, 145.0, 187.0, 165.0, 125.0, 200.0, 112.0, 200.0, 195.0, 185.0, 160.0, 200.0, 180.0, 170.0, 110.0, 190.0, 130.0, 160.0, 130.0, 200.0, 180.0, 115.0, 120.0, 165.0, 175.0, 160.0, 130.0, 185.0, 115.0, 190.0, 200.0, 180.0, 140.0, 164.0, 175.0, 135.0, 157.0, 150.0, 116.0, 145.0, 123.0, 140.0, 172.0, 118.0, 135.0, 140.0, 165.0, 200.0, 200.0, 145.0, 200.0, 160.0, 123.0, 180.0, 118.0, 128.0, 170.0, 140.0, 120.0, 120.0, 135.0, 165.0, 140.0, 200.0, 135.0, 165.0, 152.0, 135.0, 200.0, 170.0, 200.0, 120.0, 145.0, 115.0, 175.0, 120.0, 140.0, 130.0, 124.0, 200.0, 198.0, 200.0, 200.0, 200.0, 110.0, 130.0, 160.0, 136.0, 160.0, 165.0, 120.0, 95.0, 175.0, 200.0, 200.0, 122.0, 175.0, 150.0, 155.0, 180.0, 200.0, 200.0, 120.0, 195.0, 123.0, 135.0, 125.0, 180.0, 200.0, 140.0, 110.0, 165.0, 111.0, 125.0, 145.0, 148.0, 155.0, 170.0, 180.0, 158.0, 125.0, 118.0, 155.0, 174.0, 138.0, 110.0, 130.0, 125.0, 130.0, 124.0, 170.0, 160.0, 190.0, 155.0, 120.0, 156.0, 102.0, 145.0, 145.0, 130.0, 132.0, 120.0, 165.0, 150.0, 200.0, 170.0, 159.0, 115.0, 144.0, 175.0, 128.0, 195.0, 135.0, 200.0, 200.0, 125.0, 196.0, 160.0, 120.0, 140.0, 180.0, 185.0, 130.0, 132.0, 105.0, 170.0, 160.0, 108.0, 180.0, 155.0, 131.0, 190.0, 175.0, 125.0, 135.0, 185.0, 200.0, 120.0, 140.0, 140.0, 185.0, 150.0, 200.0, 185.0, 163.0, 130.0, 170.0, 165.0, 135.0, 160.0, 160.0, 120.0, 120.0, 200.0, 195.0, 155.0, 115.0, 150.0, 113.0, 180.0, 135.0, 200.0, 175.0, 120.0, 130.0, 170.0, 180.0, 184.0, 125.0, 180.0, 182.0, 182.0, 120.0, 150.0, 123.0, 113.0, 119.0, 190.0, 118.0, 120.0, 150.0, 150.0, 200.0, 150.0, 200.0, 135.0, 132.0, 168.0, 118.0, 193.0, 108.0, 155.0, 185.0, 175.0, 122.0, 160.0, 175.0, 200.0, 135.0, 135.0, 165.0, 150.0, 140.0, 133.0, 98.0, 128.0, 194.0, 145.0, 160.0, 118.0, 200.0, 149.0, 135.0, 170.0, 120.0, 140.0, 150.0, 150.0, 168.0, 105.0, 170.0, 150.0, 180.0, 200.0, 145.0, 135.0, 180.0, 200.0, 129.0, 140.0, 155.0, 136.0, 170.0, 155.0, 165.0, 128.0, 110.0, 160.0, 92.0, 200.0, 200.0, 118.0, 200.0, 110.0, 186.0, 165.0, 200.0, 135.0, 200.0, 140.0, 130.0, 135.0, 144.0, 190.0, 150.0, 147.0, 140.0, 130.0, 180.0, 110.0, 200.0, 120.0, 130.0, 130.0, 118.0, 200.0, 200.0, 175.0, 133.0, 125.0, 160.0, 110.0, 200.0, 158.0, 173.0, 200.0, 200.0, 148.0, 142.0, 122.0, 175.0, 125.0, 115.0, 125.0, 200.0, 160.0, 126.0, 185.0, 200.0, 135.0, 110.0, 110.0, 130.0, 170.0, 145.0, 145.0, 190.0, 120.0, 125.0, 142.0, 113.0, 120.0, 110.0, 116.0, 185.0, 110.0, 125.0, 115.0, 130.0, 120.0, 200.0, 175.0, 185.0, 110.0, 160.0, 195.0, 140.0, 162.0, 140.0, 145.0, 123.0, 114.0, 96.0, 175.0, 200.0, 200.0, 120.0, 140.0, 103.0, 160.0, 200.0, 163.0, 133.0, 150.0, 200.0, 120.0, 122.0, 145.0, 130.0, 195.0, 135.0, 200.0, 140.0, 185.0, 170.0, 200.0, 140.0, 152.0, 125.0, 145.0, 128.0, 155.0, 200.0, 125.0, 135.0, 135.0, 155.0, 120.0, 170.0, 115.0, 140.0, 135.0, 120.0, 155.0, 165.0, 160.0, 150.0, 135.0, 172.0, 128.0, 190.0, 140.0, 150.0, 115.0, 135.0, 128.0, 135.0, 147.0, 138.0, 180.0, 125.0, 134.0, 180.0, 135.0, 195.0, 93.0, 200.0, 160.0, 170.0, 130.0, 158.0, 200.0, 200.0, 149.0, 136.0, 200.0, 110.0, 200.0, 115.0, 105.0, 170.0, 200.0, 200.0, 150.0, 140.0, 154.0, 103.0, 147.0, 190.0, 145.0, 200.0, 164.0, 161.0, 172.0, 200.0, 170.0, 111.0, 149.0, 155.0, 200.0, 150.0, 120.0, 140.0, 155.0, 200.0, 145.0, 151.0, 185.0, 200.0, 130.0, 200.0, 200.0, 165.0, 187.0, 200.0, 190.0, 165.0, 104.0, 180.0, 150.0, 175.0, 200.0, 175.0, 115.0, 140.0, 200.0, 150.0, 160.0, 170.0, 157.0, 180.0, 130.0, 165.0, 124.0, 110.0, 130.0, 122.0, 120.0, 200.0, 135.0, 170.0, 100.0, 145.0, 140.0, 180.0, 165.0, 139.0, 200.0, 200.0, 145.0, 130.0, 112.0, 180.0, 138.0, 124.0, 110.0, 150.0, 200.0, 180.0, 185.0, 145.0, 199.0, 165.0, 190.0, 131.0, 200.0, 170.0, 155.0, 150.0, 133.0, 130.0, 137.0, 190.0, 195.0, 170.0, 160.0, 190.0, 150.0, 150.0, 185.0, 135.0, 190.0, 125.0, 112.0, 154.0, 123.0, 178.0, 125.0, 125.0, 132.0, 142.0, 200.0, 175.0, 175.0, 180.0, 124.0, 135.0, 183.0, 151.0, 145.0, 122.0, 180.0, 140.0, 120.0, 160.0, 137.0, 170.0, 175.0, 126.0, 148.0, 142.0, 162.0, 170.0, 150.0, 110.0, 180.0, 135.0, 153.0, 168.0, 160.0, 150.0, 145.0, 200.0, 139.0, 199.0, 200.0, 104.0, 145.0, 105.0, 165.0, 115.0, 150.0, 175.0, 130.0, 185.0, 150.0, 180.0, 132.0, 175.0, 130.0, 200.0, 130.0, 145.0, 110.0, 132.0, 160.0, 145.0, 130.0, 127.0, 200.0, 115.0, 100.0, 160.0, 150.0, 140.0, 140.0, 130.0, 140.0, 163.0, 190.0, 165.0, 170.0, 170.0, 136.0, 200.0, 149.0, 150.0, 130.0, 89.0, 135.0, 200.0, 170.0, 170.0, 140.0, 150.0, 160.0, 100.0, 145.0, 170.0, 125.0, 137.0, 170.0, 165.0, 200.0, 121.0, 130.0, 170.0, 120.0, 173.0, 165.0, 115.0, 150.0, 196.0, 200.0, 155.0, 118.0, 140.0, 200.0, 175.0, 185.0, 130.0, 115.0, 200.0, 135.0, 160.0, 120.0, 168.0, 119.0, 135.0, 145.0, 160.0, 145.0, 120.0, 176.0, 150.0, 200.0, 115.0, 170.0, 130.0, 200.0, 145.0, 200.0, 187.0, 170.0, 195.0, 160.0, 184.0, 150.0, 180.0, 170.0, 155.0, 200.0, 200.0, 200.0, 118.0, 150.0, 145.0, 135.0, 175.0, 129.0, 176.0, 160.0, 175.0, 185.0, 200.0, 140.0, 136.0, 169.0, 181.0, 193.0, 198.0, 145.0, 200.0, 162.0, 200.0, 175.0, 122.0, 153.0, 200.0, 120.0, 135.0, 107.0, 160.0, 123.0, 160.0, 153.0, 155.0, 155.0, 185.0, 140.0, 190.0, 140.0, 115.0, 145.0, 195.0, 145.0, 157.0, 160.0, 185.0, 135.0, 135.0, 114.0, 138.0, 200.0, 130.0, 158.0, 155.0, 165.0, 128.0, 195.0, 123.0, 130.0, 200.0, 200.0, 125.0, 160.0, 160.0, 187.0, 124.0, 200.0, 200.0, 155.0, 160.0, 129.0, 172.0, 150.0, 170.0, 117.0, 123.0, 117.0, 200.0, 180.0, 200.0, 195.0, 200.0, 200.0, 145.0, 152.0, 128.0, 200.0, 140.0, 130.0, 200.0, 115.0, 110.0, 162.0, 200.0, 145.0, 150.0, 165.0, 120.0, 175.0, 178.0, 120.0, 138.0, 145.0, 160.0, 142.0, 100.0, 155.0, 160.0, 125.0, 135.0, 129.0, 190.0, 170.0, 125.0, 195.0, 200.0, 155.0, 115.0, 170.0, 180.0, 200.0, 175.0, 200.0, 150.0, 171.0, 185.0, 140.0, 134.0, 200.0, 200.0, 170.0, 200.0, 200.0, 121.0, 87.0, 110.0, 170.0, 120.0, 145.0, 200.0, 140.0, 165.0, 139.0, 113.0, 150.0, 150.0, 130.0, 141.0, 160.0, 99.0, 180.0, 165.0, 135.0, 180.0, 102.0, 120.0, 100.0, 190.0, 142.0, 157.0, 200.0, 130.0, 100.0, 110.0, 170.0, 121.0, 120.0, 128.0, 200.0, 135.0, 140.0, 155.0, 200.0, 165.0, 120.0, 114.0, 115.0, 115.0, 200.0, 127.0, 160.0, 115.0, 170.0, 185.0, 185.0, 180.0, 130.0, 200.0, 185.0, 120.0, 134.0, 140.0, 200.0, 200.0, 150.0, 180.0, 128.0, 125.0, 140.0, 129.0, 124.0, 140.0, 150.0, 148.0, 145.0, 165.0, 162.0, 115.0, 145.0, 150.0, 160.0, 160.0, 125.0, 112.0, 160.0, 115.0, 112.0, 200.0, 170.0, 185.0, 150.0, 137.0, 128.0, 147.0, 200.0, 158.0, 200.0, 130.0, 140.0, 110.0, 200.0, 200.0, 150.0, 130.0, 190.0, 178.0, 140.0, 175.0, 142.0, 185.0, 120.0, 170.0, 195.0, 135.0, 180.0, 180.0, 160.0, 140.0, 190.0, 132.0, 140.0, 120.0, 164.0, 198.0, 145.0, 165.0, 131.0, 160.0, 129.0, 150.0, 173.0, 150.0, 160.0, 120.0, 165.0, 144.0, 200.0, 130.0, 125.0, 153.0, 175.0, 130.0, 125.0, 155.0, 200.0, 125.0, 145.0, 120.0, 126.0, 175.0, 195.0, 155.0, 200.0, 140.0, 185.0, 130.0, 138.0, 150.0, 165.0, 135.0, 114.0, 132.0, 175.0, 140.0, 145.0, 175.0, 132.0, 140.0, 172.0, 142.0, 150.0, 190.0, 185.0, 140.0, 125.0, 140.0, 126.0, 175.0, 185.0, 135.0, 142.0, 185.0, 200.0, 133.0, 147.0, 200.0, 135.0, 200.0, 165.0, 200.0, 180.0, 200.0, 200.0, 130.0, 175.0, 120.0, 130.0, 105.0, 145.0, 180.0, 200.0, 111.0, 150.0, 200.0, 167.0, 165.0, 185.0, 130.0, 125.0, 155.0, 180.0, 115.0, 129.0, 180.0, 145.0, 200.0, 145.0, 132.0, 143.0, 150.0, 155.0, 115.0, 121.0, 200.0, 130.0, 130.0, 170.0, 135.0, 140.0, 130.0, 130.0, 150.0, 126.0, 180.0, 140.0, 190.0, 150.0, 165.0, 135.0, 153.0, 145.0, 145.0, 200.0, 120.0, 200.0, 120.0, 128.0, 175.0, 170.0, 140.0, 150.0, 180.0, 130.0, 149.0, 132.0, 180.0, 119.0, 185.0, 135.0, 140.0, 185.0, 180.0, 123.0, 190.0, 176.0, 165.0, 155.0, 200.0, 132.0, 115.0, 120.0, 170.0, 160.0, 175.0, 115.0, 172.0, 145.0, 160.0, 135.0, 160.0, 110.0, 100.0, 185.0, 200.0, 200.0, 140.0, 180.0, 157.0, 155.0, 113.0, 150.0, 140.0, 125.0, 165.0, 140.0, 145.0, 150.0, 123.0, 96.0, 108.0, 145.0, 175.0, 150.0, 180.0, 118.0, 110.0, 125.0, 200.0, 147.0, 158.0, 200.0, 184.0, 180.0, 85.0, 200.0, 130.0, 168.0, 130.0, 130.0, 190.0, 185.0, 200.0, 180.0, 150.0, 200.0, 160.0, 110.0, 190.0, 165.0, 197.0, 128.0, 156.0, 150.0, 164.0, 120.0, 110.0, 181.0, 118.0, 200.0, 162.0, 145.0, 110.0, 200.0, 200.0, 200.0, 133.0, 180.0, 200.0, 185.0, 175.0, 135.0, 120.0, 195.0, 123.0, 137.0, 145.0, 160.0, 150.0, 135.0, 200.0, 130.0, 175.0, 180.0, 115.0, 164.0, 140.0, 175.0, 200.0, 140.0, 150.0, 200.0, 155.0, 200.0, 118.0, 200.0, 200.0, 155.0, 110.0, 140.0, 200.0, 170.0, 150.0, 126.0, 158.0, 125.0, 130.0, 200.0, 200.0, 132.0, 170.0, 105.0, 136.0, 138.0, 140.0, 125.0, 164.0, 108.0, 100.0, 200.0, 125.0, 158.0, 180.0, 145.0, 131.0, 145.0, 140.0, 175.0, 130.0, 167.0, 145.0, 185.0, 115.0, 192.0, 200.0, 135.0, 190.0, 130.0, 165.0, 102.0, 130.0, 110.0, 153.0, 200.0, 125.0, 110.0, 155.0, 150.0, 200.0, 130.0, 110.0, 200.0, 189.0, 134.0, 140.0, 157.0, 165.0, 118.0, 180.0, 140.0, 112.0, 135.0, 190.0, 182.0, 200.0, 200.0, 130.0, 160.0, 170.0, 154.0, 135.0, 200.0, 125.0, 110.0, 135.0, 112.0, 135.0, 200.0, 120.0, 100.0, 170.0, 165.0, 108.0, 155.0, 148.0, 152.0, 200.0, 120.0, 125.0, 135.0, 111.0, 200.0, 150.0, 175.0, 150.0, 140.0, 125.0, 200.0, 124.0, 200.0, 190.0, 128.0, 165.0, 190.0, 165.0, 160.0, 185.0, 120.0, 200.0, 150.0, 150.0, 130.0, 130.0, 150.0, 175.0, 155.0, 150.0, 185.0, 160.0, 180.0, 140.0, 190.0, 130.0, 107.0, 165.0, 164.0, 165.0, 140.0, 110.0, 200.0, 195.0, 146.0, 104.0, 200.0, 150.0, 135.0, 145.0, 110.0, 160.0, 130.0, 133.0, 185.0, 165.0, 122.0, 160.0, 180.0, 125.0, 195.0, 115.0, 130.0, 181.0, 150.0, 160.0, 150.0, 140.0, 182.0, 150.0, 197.0, 103.0, 155.0, 200.0, 130.0, 140.0, 122.0, 150.0, 150.0, 127.0, 102.0, 155.0, 185.0, 105.0, 158.0, 130.0, 155.0, 135.0, 200.0, 200.0, 170.0, 107.0, 190.0, 119.0, 150.0, 155.0, 160.0, 160.0, 118.0, 165.0, 200.0, 130.0, 122.0, 128.0, 190.0, 160.0, 156.0, 130.0, 185.0, 180.0, 150.0, 140.0, 145.0, 130.0, 160.0, 172.0, 150.0, 170.0, 150.0, 135.0, 135.0, 200.0, 120.0, 160.0, 135.0, 190.0, 130.0, 189.0, 110.0, 180.0, 137.0, 125.0, 200.0, 145.0, 120.0, 145.0, 190.0, 120.0, 185.0, 130.0, 145.0, 139.0, 150.0, 200.0, 200.0, 175.0, 185.0, 174.0, 115.0, 170.0, 195.0, 180.0, 180.0, 150.0, 165.0, 158.0, 195.0, 130.0, 160.0, 124.0, 140.0, 162.0, 120.0, 150.0, 190.0, 125.0, 140.0, 170.0, 138.0, 130.0, 155.0, 170.0, 165.0, 165.0, 120.0, 130.0, 194.0, 155.0, 150.0], dtype=np.float32).reshape(1984,1)
weight=torch.tensor(weight)
C=200.0
C=torch.tensor(C)
height= np.array([66.0, 64.0, 74.0, 66.0, 64.0, 65.0, 63.0, 68.0, 63.0, 64.0, 62.0, 73.0, 72.0, 72.0, 72.0, 70.0, 63.0, 68.0, 68.0, 71.0, 65.0, 66.0, 60.0, 65.0, 69.0, 66.0, 65.0, 71.0, 68.0, 68.0, 70.0, 67.0, 64.0, 73.0, 64.0, 62.0, 64.0, 63.0, 69.0, 67.0, 66.0, 72.0, 63.0, 64.0, 63.0, 68.0, 64.0, 73.0, 67.0, 72.0, 68.0, 77.0, 64.0, 64.0, 63.0, 72.0, 68.0, 68.0, 64.0, 70.0, 61.0, 76.0, 65.0, 67.0, 65.0, 64.0, 73.0, 67.0, 65.0, 65.0, 67.0, 71.0, 68.0, 70.0, 60.0, 65.0, 62.0, 72.0, 66.0, 67.0, 69.0, 70.0, 70.0, 68.0, 66.0, 61.0, 60.0, 71.0, 70.0, 71.0, 73.0, 64.0, 68.0, 66.0, 69.0, 69.0, 63.0, 68.0, 70.0, 63.0, 66.0, 66.0, 64.0, 62.0, 66.0, 64.0, 68.0, 64.0, 67.0, 60.0, 71.0, 60.0, 66.0, 66.0, 65.0, 63.0, 70.0, 68.0, 65.0, 66.0, 62.0, 60.0, 76.0, 66.0, 64.0, 72.0, 66.0, 62.0, 66.0, 69.0, 68.0, 67.0, 68.0, 70.0, 62.0, 70.0, 63.0, 66.0, 70.0, 68.0, 70.0, 65.0, 68.0, 66.0, 71.0, 66.0, 62.0, 68.0, 70.0, 61.0, 63.0, 72.0, 64.0, 67.0, 66.0, 68.0, 61.0, 69.0, 62.0, 64.0, 68.0, 60.0, 71.0, 64.0, 67.0, 69.0, 67.0, 68.0, 63.0, 71.0, 64.0, 68.0, 68.0, 66.0, 66.0, 66.0, 60.0, 77.0, 67.0, 66.0, 62.0, 63.0, 64.0, 72.0, 67.0, 61.0, 64.0, 70.0, 62.0, 63.0, 68.0, 69.0, 64.0, 64.0, 72.0, 72.0, 64.0, 61.0, 74.0, 70.0, 64.0, 71.0, 63.0, 73.0, 67.0, 64.0, 73.0, 64.0, 63.0, 62.0, 62.0, 70.0, 62.0, 71.0, 71.0, 71.0, 70.0, 67.0, 64.0, 67.0, 62.0, 62.0, 67.0, 66.0, 64.0, 68.0, 62.0, 62.0, 66.0, 68.0, 65.0, 74.0, 74.0, 68.0, 70.0, 71.0, 68.0, 62.0, 68.0, 62.0, 66.0, 68.0, 60.0, 64.0, 68.0, 72.0, 66.0, 68.0, 68.0, 69.0, 63.0, 64.0, 65.0, 59.0, 61.0, 71.0, 72.0, 66.0, 69.0, 69.0, 63.0, 64.0, 60.0, 62.0, 68.0, 70.0, 71.0, 71.0, 68.0, 66.0, 63.0, 60.0, 63.0, 68.0, 70.0, 64.0, 70.0, 66.0, 68.0, 61.0, 67.0, 68.0, 66.0, 70.0, 68.0, 66.0, 71.0, 63.0, 65.0, 66.0, 64.0, 70.0, 70.0, 64.0, 64.0, 63.0, 62.0, 65.0, 66.0, 65.0, 60.0, 66.0, 61.0, 72.0, 74.0, 67.0, 66.0, 62.0, 62.0, 72.0, 65.0, 60.0, 64.0, 62.0, 66.0, 64.0, 71.0, 65.0, 73.0, 69.0, 65.0, 64.0, 64.0, 64.0, 61.0, 73.0, 67.0, 62.0, 73.0, 63.0, 67.0, 68.0, 72.0, 70.0, 70.0, 60.0, 67.0, 63.0, 66.0, 66.0, 71.0, 69.0, 66.0, 67.0, 76.0, 69.0, 65.0, 68.0, 61.0, 62.0, 62.0, 62.0, 69.0, 62.0, 72.0, 67.0, 61.0, 65.0, 72.0, 66.0, 72.0, 64.0, 71.0, 72.0, 66.0, 68.0, 65.0, 65.0, 62.0, 66.0, 67.0, 67.0, 64.0, 74.0, 63.0, 67.0, 68.0, 64.0, 64.0, 66.0, 66.0, 65.0, 65.0, 72.0, 68.0, 63.0, 70.0, 68.0, 74.0, 63.0, 64.0, 65.0, 68.0, 61.0, 67.0, 67.0, 73.0, 62.0, 70.0, 69.0, 71.0, 65.0, 62.0, 69.0, 77.0, 68.0, 62.0, 64.0, 70.0, 67.0, 70.0, 62.0, 63.0, 62.0, 63.0, 69.0, 64.0, 64.0, 69.0, 59.0, 61.0, 60.0, 72.0, 68.0, 63.0, 65.0, 70.0, 72.0, 62.0, 70.0, 60.0, 66.0, 64.0, 71.0, 73.0, 75.0, 62.0, 63.0, 65.0, 70.0, 64.0, 68.0, 68.0, 65.0, 69.0, 64.0, 72.0, 69.0, 64.0, 63.0, 68.0, 68.0, 64.0, 66.0, 70.0, 63.0, 73.0, 69.0, 75.0, 65.0, 64.0, 66.0, 66.0, 64.0, 64.0, 66.0, 64.0, 63.0, 63.0, 67.0, 69.0, 73.0, 72.0, 63.0, 66.0, 72.0, 64.0, 72.0, 63.0, 64.0, 65.0, 62.0, 61.0, 68.0, 62.0, 64.0, 66.0, 60.0, 64.0, 65.0, 60.0, 76.0, 72.0, 62.0, 62.0, 70.0, 71.0, 74.0, 65.0, 63.0, 67.0, 65.0, 63.0, 65.0, 64.0, 65.0, 63.0, 68.0, 63.0, 70.0, 68.0, 66.0, 67.0, 68.0, 66.0, 65.0, 69.0, 68.0, 66.0, 71.0, 64.0, 74.0, 62.0, 65.0, 69.0, 72.0, 65.0, 66.0, 70.0, 61.0, 60.0, 70.0, 73.0, 66.0, 57.0, 67.0, 73.0, 65.0, 62.0, 76.0, 70.0, 64.0, 63.0, 67.0, 63.0, 69.0, 67.0, 66.0, 61.0, 70.0, 71.0, 65.0, 70.0, 63.0, 64.0, 68.0, 64.0, 67.0, 66.0, 68.0, 65.0, 67.0, 61.0, 73.0, 63.0, 66.0, 64.0, 71.0, 63.0, 71.0, 63.0, 64.0, 73.0, 65.0, 66.0, 66.0, 60.0, 68.0, 59.0, 70.0, 62.0, 70.0, 72.0, 64.0, 72.0, 66.0, 70.0, 63.0, 69.0, 66.0, 68.0, 64.0, 67.0, 60.0, 63.0, 74.0, 61.0, 73.0, 70.0, 73.0, 62.0, 60.0, 67.0, 64.0, 67.0, 70.0, 64.0, 62.0, 72.0, 66.0, 69.0, 63.0, 82.0, 63.0, 68.0, 72.0, 63.0, 63.0, 64.0, 71.0, 64.0, 72.0, 62.0, 66.0, 72.0, 66.0, 61.0, 64.0, 62.0, 69.0, 68.0, 66.0, 66.0, 70.0, 68.0, 71.0, 64.0, 61.0, 68.0, 63.0, 65.0, 64.0, 65.0, 64.0, 66.0, 62.0, 71.0, 65.0, 64.0, 66.0, 60.0, 66.0, 61.0, 72.0, 70.0, 63.0, 68.0, 63.0, 70.0, 62.0, 71.0, 70.0, 64.0, 63.0, 65.0, 71.0, 62.0, 73.0, 64.0, 68.0, 76.0, 70.0, 73.0, 70.0, 66.0, 68.0, 61.0, 65.0, 66.0, 63.0, 63.0, 74.0, 66.0, 62.0, 70.0, 68.0, 70.0, 69.0, 70.0, 63.0, 65.0, 69.0, 72.0, 65.0, 68.0, 62.0, 70.0, 66.0, 65.0, 70.0, 66.0, 61.0, 70.0, 66.0, 65.0, 68.0, 68.0, 68.0, 63.0, 70.0, 70.0, 65.0, 64.0, 66.0, 63.0, 69.0, 65.0, 77.0, 70.0, 64.0, 64.0, 69.0, 62.0, 64.0, 63.0, 58.0, 73.0, 66.0, 64.0, 62.0, 61.0, 64.0, 64.0, 70.0, 62.0, 62.0, 64.0, 64.0, 66.0, 66.0, 69.0, 64.0, 64.0, 62.0, 62.0, 71.0, 59.0, 62.0, 68.0, 68.0, 62.0, 63.0, 69.0, 67.0, 64.0, 68.0, 70.0, 76.0, 69.0, 66.0, 66.0, 64.0, 72.0, 69.0, 69.0, 62.0, 60.0, 66.0, 60.0, 67.0, 67.0, 66.0, 70.0, 64.0, 66.0, 60.0, 68.0, 66.0, 73.0, 72.0, 64.0, 67.0, 71.0, 70.0, 66.0, 67.0, 71.0, 63.0, 73.0, 70.0, 70.0, 71.0, 66.0, 75.0, 60.0, 72.0, 70.0, 63.0, 75.0, 60.0, 73.0, 65.0, 65.0, 63.0, 68.0, 67.0, 61.0, 69.0, 64.0, 62.0, 70.0, 68.0, 67.0, 62.0, 64.0, 68.0, 72.0, 68.0, 64.0, 66.0, 64.0, 73.0, 73.0, 69.0, 68.0, 71.0, 63.0, 60.0, 66.0, 66.0, 66.0, 68.0, 70.0, 62.0, 66.0, 63.0, 75.0, 67.0, 68.0, 62.0, 70.0, 63.0, 65.0, 69.0, 71.0, 67.0, 62.0, 64.0, 65.0, 72.0, 68.0, 62.0, 75.0, 65.0, 62.0, 65.0, 63.0, 66.0, 64.0, 68.0, 72.0, 64.0, 70.0, 65.0, 64.0, 64.0, 67.0, 73.0, 73.0, 65.0, 64.0, 72.0, 67.0, 67.0, 66.0, 74.0, 62.0, 60.0, 64.0, 63.0, 74.0, 74.0, 63.0, 62.0, 62.0, 67.0, 75.0, 69.0, 65.0, 73.0, 63.0, 60.0, 65.0, 64.0, 64.0, 66.0, 64.0, 67.0, 69.0, 71.0, 72.0, 72.0, 63.0, 66.0, 70.0, 64.0, 64.0, 68.0, 74.0, 62.0, 63.0, 65.0, 66.0, 60.0, 69.0, 61.0, 68.0, 65.0, 66.0, 70.0, 72.0, 66.0, 67.0, 64.0, 71.0, 63.0, 73.0, 64.0, 68.0, 64.0, 66.0, 67.0, 64.0, 64.0, 62.0, 69.0, 63.0, 62.0, 63.0, 63.0, 72.0, 61.0, 75.0, 71.0, 70.0, 60.0, 69.0, 64.0, 72.0, 69.0, 63.0, 66.0, 64.0, 71.0, 64.0, 59.0, 68.0, 75.0, 77.0, 68.0, 70.0, 69.0, 63.0, 65.0, 73.0, 66.0, 72.0, 66.0, 72.0, 69.0, 67.0, 66.0, 67.0, 68.0, 72.0, 70.0, 68.0, 65.0, 62.0, 69.0, 62.0, 70.0, 66.0, 66.0, 66.0, 62.0, 72.0, 74.0, 69.0, 69.0, 66.0, 71.0, 69.0, 60.0, 62.0, 67.0, 67.0, 68.0, 65.0, 63.0, 65.0, 64.0, 66.0, 66.0, 74.0, 65.0, 63.0, 62.0, 68.0, 66.0, 64.0, 61.0, 65.0, 62.0, 73.0, 62.0, 70.0, 58.0, 68.0, 67.0, 64.0, 71.0, 68.0, 70.0, 72.0, 67.0, 63.0, 63.0, 66.0, 65.0, 61.0, 61.0, 67.0, 73.0, 66.0, 71.0, 64.0, 70.0, 67.0, 62.0, 67.0, 69.0, 66.0, 66.0, 66.0, 64.0, 66.0, 64.0, 72.0, 64.0, 64.0, 65.0, 68.0, 72.0, 63.0, 71.0, 64.0, 70.0, 66.0, 64.0, 69.0, 67.0, 75.0, 66.0, 67.0, 68.0, 67.0, 75.0, 71.0, 62.0, 68.0, 67.0, 68.0, 70.0, 70.0, 67.0, 64.0, 65.0, 64.0, 65.0, 71.0, 63.0, 70.0, 70.0, 64.0, 61.0, 68.0, 65.0, 67.0, 67.0, 59.0, 68.0, 63.0, 65.0, 66.0, 68.0, 69.0, 67.0, 72.0, 63.0, 74.0, 74.0, 66.0, 68.0, 68.0, 72.0, 69.0, 66.0, 62.0, 68.0, 74.0, 62.0, 72.0, 66.0, 67.0, 65.0, 66.0, 65.0, 60.0, 64.0, 62.0, 64.0, 68.0, 64.0, 64.0, 70.0, 64.0, 63.0, 69.0, 67.0, 63.0, 67.0, 60.0, 62.0, 72.0, 67.0, 67.0, 68.0, 66.0, 66.0, 68.0, 60.0, 67.0, 65.0, 60.0, 69.0, 72.0, 65.0, 69.0, 64.0, 64.0, 68.0, 62.0, 67.0, 65.0, 64.0, 67.0, 66.0, 73.0, 74.0, 66.0, 65.0, 72.0, 64.0, 74.0, 63.0, 63.0, 66.0, 69.0, 72.0, 62.0, 63.0, 64.0, 70.0, 69.0, 66.0, 63.0, 62.0, 73.0, 63.0, 69.0, 66.0, 73.0, 65.0, 66.0, 71.0, 68.0, 64.0, 63.0, 72.0, 66.0, 70.0, 64.0, 66.0, 61.0, 72.0, 65.0, 64.0, 68.0, 64.0, 74.0, 67.0, 70.0, 66.0, 71.0, 71.0, 71.0, 67.0, 74.0, 75.0, 62.0, 72.0, 66.0, 65.0, 70.0, 66.0, 70.0, 72.0, 70.0, 72.0, 64.0, 60.0, 64.0, 61.0, 66.0, 65.0, 65.0, 62.0, 68.0, 67.0, 67.0, 73.0, 63.0, 64.0, 70.0, 63.0, 66.0, 61.0, 68.0, 63.0, 66.0, 71.0, 67.0, 73.0, 64.0, 61.0, 63.0, 63.0, 62.0, 64.0, 67.0, 67.0, 66.0, 72.0, 73.0, 66.0, 66.0, 61.0, 63.0, 73.0, 64.0, 66.0, 70.0, 68.0, 67.0, 74.0, 64.0, 61.0, 66.0, 60.0, 59.0, 62.0, 74.0, 62.0, 62.0, 62.0, 75.0, 66.0, 66.0, 64.0, 71.0, 66.0, 70.0, 61.0, 63.0, 67.0, 74.0, 69.0, 70.0, 66.0, 74.0, 65.0, 63.0, 68.0, 64.0, 68.0, 66.0, 63.0, 69.0, 60.0, 61.0, 75.0, 70.0, 63.0, 69.0, 66.0, 64.0, 63.0, 64.0, 64.0, 67.0, 64.0, 72.0, 63.0, 67.0, 63.0, 66.0, 65.0, 63.0, 66.0, 64.0, 64.0, 68.0, 71.0, 71.0, 72.0, 60.0, 70.0, 74.0, 74.0, 68.0, 74.0, 75.0, 68.0, 72.0, 63.0, 65.0, 71.0, 72.0, 64.0, 63.0, 66.0, 66.0, 61.0, 60.0, 72.0, 62.0, 65.0, 73.0, 66.0, 66.0, 67.0, 68.0, 62.0, 65.0, 63.0, 62.0, 68.0, 59.0, 62.0, 69.0, 70.0, 66.0, 64.0, 59.0, 62.0, 68.0, 59.0, 68.0, 63.0, 63.0, 63.0, 62.0, 68.0, 64.0, 63.0, 65.0, 72.0, 70.0, 66.0, 70.0, 72.0, 69.0, 63.0, 58.0, 63.0, 63.0, 73.0, 69.0, 70.0, 66.0, 60.0, 66.0, 65.0, 72.0, 62.0, 72.0, 69.0, 65.0, 73.0, 66.0, 72.0, 73.0, 68.0, 59.0, 64.0, 66.0, 62.0, 60.0, 60.0, 65.0, 63.0, 66.0, 64.0, 71.0, 67.0, 63.0, 63.0, 67.0, 63.0, 72.0, 65.0, 66.0, 66.0, 63.0, 65.0, 74.0, 67.0, 68.0, 65.0, 64.0, 68.0, 65.0, 72.0, 66.0, 69.0, 64.0, 64.0, 60.0, 72.0, 70.0, 60.0, 64.0, 67.0, 69.0, 68.0, 64.0, 64.0, 66.0, 65.0, 70.0, 69.0, 70.0, 66.0, 64.0, 66.0, 66.0, 74.0, 66.0, 68.0, 62.0, 66.0, 62.0, 65.0, 66.0, 64.0, 64.0, 63.0, 66.0, 71.0, 64.0, 66.0, 66.0, 62.0, 66.0, 64.0, 62.0, 63.0, 65.0, 67.0, 61.0, 66.0, 61.0, 72.0, 69.0, 66.0, 64.0, 63.0, 60.0, 70.0, 66.0, 69.0, 72.0, 73.0, 64.0, 66.0, 65.0, 71.0, 64.0, 63.0, 63.0, 72.0, 67.0, 69.0, 71.0, 68.0, 64.0, 73.0, 62.0, 66.0, 68.0, 64.0, 63.0, 65.0, 66.0, 64.0, 71.0, 72.0, 68.0, 64.0, 72.0, 72.0, 66.0, 72.0, 66.0, 65.0, 65.0, 66.0, 65.0, 71.0, 74.0, 70.0, 64.0, 69.0, 63.0, 66.0, 63.0, 68.0, 66.0, 78.0, 71.0, 70.0, 72.0, 73.0, 69.0, 63.0, 62.0, 65.0, 66.0, 71.0, 65.0, 62.0, 70.0, 64.0, 72.0, 64.0, 65.0, 71.0, 70.0, 73.0, 67.0, 62.0, 68.0, 66.0, 64.0, 66.0, 63.0, 70.0, 66.0, 64.0, 66.0, 66.0, 69.0, 63.0, 71.0, 64.0, 73.0, 62.0, 63.0, 66.0, 70.0, 63.0, 68.0, 65.0, 61.0, 62.0, 69.0, 69.0, 65.0, 64.0, 70.0, 65.0, 68.0, 61.0, 64.0, 65.0, 64.0, 63.0, 69.0, 66.0, 72.0, 61.0, 74.0, 71.0, 68.0, 68.0, 65.0, 67.0, 65.0, 64.0, 62.0, 72.0, 73.0, 60.0, 70.0, 64.0, 68.0, 62.0, 62.0, 63.0, 60.0, 71.0, 64.0, 67.0, 60.0, 64.0, 66.0, 64.0, 59.0, 63.0, 66.0, 66.0, 70.0, 70.0, 64.0, 65.0, 66.0, 61.0, 66.0, 66.0, 73.0, 72.0, 74.0, 65.0, 64.0, 62.0, 71.0, 62.0, 68.0, 61.0, 70.0, 64.0, 59.0, 70.0, 65.0, 68.0, 68.0, 69.0, 69.0, 72.0, 75.0, 69.0, 71.0, 72.0, 68.0, 64.0, 72.0, 66.0, 72.0, 67.0, 67.0, 66.0, 72.0, 64.0, 63.0, 69.0, 63.0, 70.0, 72.0, 70.0, 65.0, 73.0, 75.0, 69.0, 63.0, 69.0, 61.0, 71.0, 72.0, 65.0, 66.0, 73.0, 64.0, 67.0, 63.0, 66.0, 72.0, 64.0, 62.0, 65.0, 72.0, 59.0, 67.0, 65.0, 64.0, 72.0, 65.0, 64.0, 68.0, 68.0, 66.0, 76.0, 63.0, 74.0, 67.0, 68.0, 61.0, 64.0, 72.0, 68.0, 71.0, 63.0, 65.0, 63.0, 60.0, 72.0, 70.0, 64.0, 68.0, 61.0, 63.0, 67.0, 67.0, 63.0, 71.0, 63.0, 60.0, 74.0, 66.0, 69.0, 67.0, 65.0, 62.0, 65.0, 64.0, 72.0, 65.0, 67.0, 62.0, 71.0, 62.0, 71.0, 70.0, 67.0, 72.0, 62.0, 63.0, 61.0, 72.0, 65.0, 63.0, 66.0, 64.0, 66.0, 68.0, 60.0, 65.0, 65.0, 61.0, 68.0, 60.0, 64.0, 66.0, 69.0, 66.0, 67.0, 68.0, 66.0, 69.0, 72.0, 69.0, 71.0, 74.0, 74.0, 60.0, 65.0, 69.0, 69.0, 64.0, 75.0, 65.0, 63.0, 72.0, 60.0, 66.0, 72.0, 64.0, 59.0, 71.0, 72.0, 63.0, 68.0, 62.0, 64.0, 70.0, 66.0, 63.0, 62.0, 64.0, 75.0, 70.0, 64.0, 69.0, 64.0, 67.0, 72.0, 65.0, 63.0, 70.0, 64.0, 68.0, 66.0, 66.0, 73.0, 70.0, 62.0, 70.0, 62.0, 66.0, 66.0, 64.0, 70.0, 74.0, 72.0, 66.0, 62.0, 68.0, 66.0, 66.0, 70.0, 62.0, 69.0, 71.0, 68.0, 72.0, 64.0, 64.0, 60.0, 72.0, 62.0, 64.0, 74.0, 66.0, 68.0, 67.0, 62.0, 71.0, 63.0, 66.0, 70.0, 69.0, 63.0, 71.0, 64.0, 66.0, 72.0, 62.0, 65.0, 72.0, 68.0, 70.0, 64.0, 64.0, 68.0, 70.0, 63.0, 66.0, 66.0, 67.0, 68.0, 64.0, 65.0, 70.0, 71.0, 64.0, 62.0, 71.0, 74.0, 64.0, 71.0, 70.0, 73.0, 64.0, 70.0, 74.0, 63.0, 59.0, 74.0, 66.0, 65.0, 71.0, 69.0, 72.0, 67.0, 70.0, 60.0, 64.0, 64.0, 63.0, 72.0, 63.0, 72.0, 70.0, 66.0, 61.0, 62.0, 69.0, 67.0, 65.0, 65.0, 68.0, 71.0, 74.0, 63.0, 67.0, 65.0, 71.0, 65.0, 69.0, 64.0, 72.0, 63.0, 71.0, 65.0, 72.0, 65.0, 64.0, 71.0, 63.0, 62.0, 66.0, 64.0, 67.0, 68.0, 66.0, 66.0, 66.0, 67.0, 66.0, 63.0, 68.0, 70.0, 66.0, 63.0, 70.0, 72.0, 75.0, 62.0, 68.0, 68.0, 70.0, 73.0, 66.0, 66.0, 69.0, 62.0, 63.0, 60.0, 64.0, 68.0, 60.0, 60.0, 73.0, 64.0, 66.0, 69.0, 70.0, 70.0, 72.0, 61.0, 64.0, 72.0, 63.0, 68.0], dtype=np.float32).reshape(1984,1)
height=torch.tensor(height)
N=1984
N=torch.tensor(N)
def model(N_obs,N_cens,weight,C,height,N):
    c_height = torch.zeros([amb(N)])
    weight_obs = torch.zeros([amb(N_obs)])
    c_height_obs = torch.zeros([amb(N_obs)])
    c_height_cens = torch.zeros([amb(N_cens)])
    i = torch.zeros([amb(1)])
    j = torch.zeros([amb(1)])
    c_height=height-torch.mean(height)
    i=1
    j=1
    for n in range(1, N+1):
        if weight[n-1]==C:
            c_height_cens[i-1]=c_height[n-1]
            i=i+1
        else:
            weight_obs[j-1]=weight[n-1]
            c_height_obs[j-1]=c_height[n-1]
            j=j+1
    a = pyro.sample('a'.format(''), dist.Normal(torch.tensor(1234.0)*torch.ones([amb(1)]),torch.tensor(1234.0)*torch.ones([amb(1)])))
    b = pyro.sample('b'.format(''), dist.Normal(torch.tensor(1234.0)*torch.ones([amb(1)]),torch.tensor(1234.0)*torch.ones([amb(1)])))
    sigma = pyro.sample('sigma'.format(''), dist.Normal(torch.tensor(1234.0)*torch.ones([amb(1)]),torch.tensor(1234.0)*torch.ones([amb(1)])))
    weight_obs=dist.Normal(a+b*c_height_obs,sigma)
    with pyro.iarange('weight_cens_range_'.format('')):
        weight_cens = pyro.sample('weight_cens'.format(''), dist.Normal(a+b*c_height_cens*torch.ones([amb(N_cens)]),sigma*torch.ones([amb(N_cens)])))
    
def guide(N_obs,N_cens,weight,C,height,N):
    for n in range(1, N+1):
        pass
    arg_1 = pyro.param('arg_1', torch.ones((amb(1))), constraint=constraints.positive)
    arg_2 = pyro.param('arg_2', torch.ones((amb(1))))
    arg_3 = pyro.param('arg_3', torch.ones((amb(1))), constraint=constraints.positive)
    a = pyro.sample('a'.format(''), dist.StudentT(df=arg_1,loc=arg_2,scale=arg_3))
    arg_4 = pyro.param('arg_4', torch.ones((amb(1))), constraint=constraints.positive)
    arg_5 = pyro.param('arg_5', torch.ones((amb(1))), constraint=constraints.positive)
    b = pyro.sample('b'.format(''), dist.Gamma(arg_4,arg_5))
    arg_6 = pyro.param('arg_6', torch.ones((amb(1))), constraint=constraints.positive)
    arg_7 = pyro.param('arg_7', torch.ones((amb(1))), constraint=constraints.positive)
    sigma = pyro.sample('sigma'.format(''), dist.Beta(arg_6,arg_7))
    arg_8 = pyro.param('arg_8', torch.ones((amb(N_cens))), constraint=constraints.positive)
    arg_9 = pyro.param('arg_9', torch.ones((amb(N_cens))), constraint=constraints.positive)
    with pyro.iarange('weight_cens_prange'):
        weight_cens = pyro.sample('weight_cens'.format(''), dist.Gamma(arg_8,arg_9))
    
    pass
    return { "a": a,"weight_cens": weight_cens,"b": b,"sigma": sigma, }
optim = Adam({'lr': 0.05})
svi = SVI(model, guide, optim, loss=Trace_ELBO() if pyro.__version__ > '0.1.2' else 'ELBO')
for i in range(4000):
    loss = svi.step(N_obs,N_cens,weight,C,height,N)
    if ((i % 1000) == 0):
        print(loss)
for name in pyro.get_param_store().get_all_param_names():
    print(('{0} : {1}'.format(name, pyro.param(name).data.numpy())))
print('a_mean', np.array2string(dist.StudentT(pyro.param('arg_1')).mean.detach().numpy(), separator=','))
print('weight_cens_mean', np.array2string(dist.Gamma(pyro.param('arg_8'), pyro.param('arg_9')).mean.detach().numpy(), separator=','))
print('b_mean', np.array2string(dist.Gamma(pyro.param('arg_4'), pyro.param('arg_5')).mean.detach().numpy(), separator=','))
print('sigma_mean', np.array2string(dist.Beta(pyro.param('arg_6'), pyro.param('arg_7')).mean.detach().numpy(), separator=','))
np.set_printoptions(threshold=np.inf)
with open('samples','w') as samplefile:
    samplefile.write('a:')
    samplefile.write(np.array2string(np.array([guide(N_obs,N_cens,weight,C,height,N)['a'].data.numpy() for _ in range(1000)]), separator=',').replace('\n',''))
    samplefile.write('\n')
    samplefile.write('weight_cens:')
    samplefile.write(np.array2string(np.array([guide(N_obs,N_cens,weight,C,height,N)['weight_cens'].data.numpy() for _ in range(1000)]), separator=',').replace('\n',''))
    samplefile.write('\n')
    samplefile.write('b:')
    samplefile.write(np.array2string(np.array([guide(N_obs,N_cens,weight,C,height,N)['b'].data.numpy() for _ in range(1000)]), separator=',').replace('\n',''))
    samplefile.write('\n')
    samplefile.write('sigma:')
    samplefile.write(np.array2string(np.array([guide(N_obs,N_cens,weight,C,height,N)['sigma'].data.numpy() for _ in range(1000)]), separator=',').replace('\n',''))
    samplefile.write('\n')
