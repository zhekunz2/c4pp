import pyro, numpy as np, torch, pyro.distributions   as dist, torch.nn as nn
from pyro.optim import Adam
import torch.distributions.constraints as constraints
from pyro.infer import SVI
if pyro.__version__ > '0.1.2': from pyro.infer import Trace_ELBO
from pyro.contrib.autoguide import *
import math
def amb(x):
    return x.data.numpy().tolist() if isinstance(x, torch.Tensor) else x
partyid7= np.array([6.0, 6.0, 7.0, 2.0, 6.0, 2.0, 7.0, 5.0, 7.0, 3.0, 2.0, 1.0, 6.0, 1.0, 6.0, 6.0, 6.0, 3.0, 2.0, 3.0, 5.0, 6.0, 5.0, 7.0, 3.0, 5.0, 4.0, 7.0, 2.0, 5.0, 1.0, 7.0, 1.0, 2.0, 7.0, 5.0, 2.0, 5.0, 4.0, 5.0, 5.0, 7.0, 7.0, 3.0, 3.0, 6.0, 2.0, 4.0, 2.0, 2.0, 6.0, 2.0, 3.0, 3.0, 6.0, 4.0, 6.0, 2.0, 1.0, 4.0, 5.0, 2.0, 6.0, 2.0, 7.0, 6.0, 3.0, 5.0, 3.0, 1.0, 7.0, 3.0, 5.0, 5.0, 4.0, 2.0, 7.0, 2.0, 1.0, 2.0, 2.0, 3.0, 7.0, 2.0, 4.0, 5.0, 5.0, 5.0, 2.0, 2.0, 5.0, 3.0, 7.0, 1.0, 2.0, 6.0, 1.0, 6.0, 6.0, 3.0, 5.0, 5.0, 2.0, 2.0, 5.0, 6.0, 2.0, 4.0, 5.0, 5.0, 1.0, 7.0, 2.0, 6.0, 4.0, 2.0, 3.0, 6.0, 1.0, 6.0, 7.0, 2.0, 2.0, 2.0, 3.0, 6.0, 1.0, 6.0, 5.0, 1.0, 5.0, 7.0, 2.0, 2.0, 5.0, 3.0, 3.0, 7.0, 2.0, 2.0, 5.0, 2.0, 3.0, 5.0, 2.0, 4.0, 5.0, 2.0, 7.0, 5.0, 2.0, 7.0, 2.0, 7.0, 1.0, 2.0, 6.0, 2.0, 3.0, 2.0, 6.0, 6.0, 2.0, 1.0, 2.0, 5.0, 4.0, 2.0, 2.0, 6.0, 2.0, 3.0, 4.0, 1.0, 7.0, 7.0, 6.0, 1.0, 5.0, 2.0, 1.0, 3.0, 1.0, 1.0, 4.0, 2.0, 2.0, 4.0, 5.0, 7.0, 5.0, 7.0, 6.0, 1.0, 2.0, 2.0, 7.0, 2.0, 5.0, 3.0, 2.0, 5.0, 5.0, 2.0, 2.0, 4.0, 4.0, 1.0, 6.0, 2.0, 5.0, 7.0, 7.0, 2.0, 2.0, 2.0, 6.0, 2.0, 2.0, 3.0, 6.0, 2.0, 6.0, 4.0, 7.0, 7.0, 2.0, 2.0, 5.0, 7.0, 1.0, 3.0, 1.0, 5.0, 3.0, 5.0, 7.0, 6.0, 5.0, 2.0, 1.0, 7.0, 3.0, 7.0, 2.0, 1.0, 3.0, 1.0, 1.0, 5.0, 3.0, 5.0, 3.0, 2.0, 2.0, 6.0, 5.0, 1.0, 4.0, 7.0, 6.0, 5.0, 2.0, 2.0, 5.0, 6.0, 2.0, 5.0, 2.0, 7.0, 4.0, 2.0, 7.0, 6.0, 1.0, 2.0, 3.0, 2.0, 4.0, 3.0, 2.0, 1.0, 3.0, 6.0, 6.0, 2.0, 6.0, 1.0, 2.0, 7.0, 2.0, 7.0, 7.0, 4.0, 5.0, 6.0, 3.0, 3.0, 2.0, 2.0, 1.0, 5.0, 5.0, 2.0, 7.0, 2.0, 6.0, 4.0, 2.0, 7.0, 5.0, 5.0, 5.0, 2.0, 1.0, 5.0, 4.0, 3.0, 5.0, 2.0, 3.0, 1.0, 1.0, 4.0, 7.0, 6.0, 6.0, 2.0, 3.0, 5.0, 7.0, 7.0, 6.0, 7.0, 2.0, 4.0, 3.0, 2.0, 7.0, 5.0, 2.0, 3.0, 5.0, 6.0, 2.0, 2.0, 2.0, 1.0, 1.0, 2.0, 4.0, 7.0, 2.0, 3.0, 7.0, 6.0, 6.0, 1.0, 2.0, 2.0, 2.0, 2.0, 2.0, 7.0, 6.0, 4.0, 5.0, 7.0, 6.0, 5.0, 3.0, 7.0, 1.0, 7.0, 2.0, 3.0, 1.0, 2.0, 1.0, 1.0, 4.0, 3.0, 4.0, 2.0, 5.0, 5.0, 4.0, 2.0, 7.0, 1.0, 2.0, 1.0, 7.0, 1.0, 2.0, 3.0, 6.0, 2.0, 4.0, 2.0, 1.0, 2.0, 3.0, 2.0, 2.0, 4.0, 5.0, 3.0, 5.0, 7.0, 2.0, 4.0, 7.0, 2.0, 2.0, 6.0, 2.0, 6.0, 4.0, 2.0, 2.0, 7.0, 1.0, 5.0, 1.0, 6.0, 2.0, 6.0, 6.0, 6.0, 7.0, 5.0, 2.0, 2.0, 6.0, 2.0, 2.0, 1.0, 5.0, 4.0, 7.0, 6.0, 5.0, 1.0, 1.0, 1.0, 7.0, 7.0, 2.0, 7.0, 6.0, 2.0, 5.0, 3.0, 7.0, 7.0, 6.0, 6.0, 2.0, 2.0, 2.0, 1.0, 1.0, 3.0, 3.0, 2.0, 2.0, 5.0, 2.0, 4.0, 5.0, 4.0, 6.0, 1.0, 2.0, 3.0, 6.0, 4.0, 1.0, 2.0, 4.0, 1.0, 5.0, 6.0, 1.0, 6.0, 6.0, 3.0, 1.0, 5.0, 3.0, 4.0, 2.0, 5.0, 4.0, 2.0, 1.0, 2.0, 2.0, 7.0, 3.0, 6.0, 4.0, 2.0, 6.0, 3.0, 7.0, 3.0, 6.0, 7.0, 2.0, 6.0, 2.0, 3.0, 7.0, 2.0, 7.0, 4.0, 2.0, 2.0, 3.0, 2.0, 1.0, 2.0, 7.0, 6.0, 5.0, 6.0, 6.0, 6.0, 1.0, 2.0, 2.0, 6.0, 2.0, 6.0, 7.0, 1.0, 4.0, 2.0, 6.0, 5.0, 7.0, 5.0, 1.0, 6.0, 2.0, 2.0, 2.0, 2.0, 6.0, 6.0, 2.0, 7.0, 5.0, 4.0, 6.0, 5.0, 6.0, 2.0, 6.0, 6.0, 3.0, 2.0, 4.0, 4.0, 3.0, 7.0, 2.0, 1.0, 3.0, 3.0, 2.0, 6.0, 2.0, 3.0, 1.0, 3.0, 6.0, 2.0, 4.0, 3.0, 6.0, 7.0, 5.0, 7.0, 2.0, 1.0, 7.0, 6.0, 1.0, 2.0, 6.0, 5.0, 1.0, 6.0, 1.0, 6.0, 6.0, 3.0, 6.0, 1.0, 2.0, 6.0, 2.0, 7.0, 6.0, 3.0, 1.0, 7.0, 6.0, 6.0, 1.0, 2.0, 2.0, 5.0, 7.0, 7.0, 2.0, 5.0, 6.0, 6.0, 2.0, 1.0, 4.0, 2.0, 3.0, 1.0, 2.0, 2.0, 3.0, 6.0, 3.0, 3.0, 3.0, 7.0, 1.0, 1.0, 1.0, 3.0, 2.0, 2.0, 1.0, 7.0, 7.0, 3.0, 7.0, 4.0, 5.0, 5.0, 3.0, 4.0, 7.0, 1.0, 2.0, 5.0, 2.0, 6.0, 3.0, 2.0, 5.0, 4.0, 2.0, 1.0, 6.0, 7.0, 6.0, 5.0, 6.0, 6.0, 7.0, 5.0, 7.0, 1.0, 1.0, 7.0, 4.0, 1.0, 2.0, 4.0, 4.0, 7.0, 4.0, 2.0, 6.0, 2.0, 6.0, 7.0, 4.0, 6.0, 5.0, 7.0, 1.0, 7.0, 6.0, 1.0, 1.0, 1.0, 4.0, 1.0, 7.0, 5.0, 5.0, 2.0, 6.0, 1.0, 7.0, 4.0, 1.0, 6.0, 5.0, 2.0, 6.0, 6.0, 2.0, 3.0, 1.0, 6.0, 7.0, 2.0, 2.0, 2.0, 2.0, 1.0, 2.0, 4.0, 4.0, 6.0, 4.0, 6.0, 2.0, 5.0, 3.0, 1.0, 3.0, 1.0, 2.0, 3.0, 3.0, 4.0, 1.0, 6.0, 7.0, 2.0, 2.0, 4.0, 7.0, 2.0, 2.0, 7.0, 2.0, 4.0, 2.0, 2.0, 2.0, 1.0, 3.0, 5.0, 6.0, 4.0, 7.0, 2.0, 5.0, 7.0, 6.0, 3.0, 4.0, 2.0, 7.0, 7.0, 1.0, 6.0, 6.0, 2.0, 1.0, 1.0, 2.0, 4.0, 6.0, 1.0, 2.0, 2.0, 7.0, 7.0, 2.0, 4.0, 4.0, 1.0, 5.0, 6.0, 6.0, 1.0, 3.0, 1.0, 2.0, 1.0, 2.0, 7.0, 4.0, 5.0, 5.0, 4.0, 7.0, 5.0, 1.0, 6.0, 1.0, 2.0, 6.0, 3.0, 7.0, 4.0, 2.0, 7.0, 7.0, 2.0, 5.0, 5.0, 1.0, 7.0, 4.0, 4.0, 6.0, 5.0, 2.0, 2.0, 7.0, 1.0, 2.0, 1.0, 3.0, 3.0, 5.0, 2.0, 7.0, 4.0, 7.0, 5.0, 2.0, 2.0, 6.0, 1.0, 3.0, 2.0, 6.0, 6.0, 6.0, 3.0, 6.0, 2.0, 6.0, 4.0, 7.0, 4.0, 7.0, 5.0, 4.0, 4.0, 6.0, 6.0, 2.0, 4.0, 4.0, 6.0, 7.0, 1.0, 3.0, 3.0, 6.0, 1.0, 5.0, 6.0, 6.0, 3.0, 4.0, 6.0, 5.0, 3.0, 7.0, 3.0, 1.0, 1.0, 2.0, 1.0, 6.0, 7.0, 2.0, 4.0, 2.0, 5.0, 6.0, 3.0, 5.0, 1.0, 6.0, 7.0, 2.0, 7.0, 4.0, 2.0, 6.0, 2.0, 6.0, 3.0, 6.0, 1.0, 7.0, 3.0, 3.0, 4.0, 2.0, 6.0, 2.0, 7.0, 3.0, 5.0, 5.0, 3.0, 6.0, 7.0, 6.0, 6.0, 2.0, 1.0, 1.0, 1.0, 7.0, 2.0, 5.0, 3.0, 3.0, 4.0, 1.0, 6.0, 7.0, 7.0, 1.0, 1.0, 6.0, 5.0, 4.0, 5.0, 3.0, 5.0, 5.0, 6.0, 2.0, 2.0, 3.0, 5.0, 6.0, 2.0, 1.0, 2.0, 5.0, 1.0, 5.0, 2.0, 6.0, 5.0, 7.0, 2.0, 1.0, 2.0, 5.0, 3.0, 1.0, 1.0, 1.0, 2.0, 1.0, 6.0, 7.0, 1.0, 6.0, 3.0, 5.0, 2.0, 1.0, 4.0, 5.0, 6.0, 5.0, 2.0, 6.0, 3.0, 5.0, 7.0, 4.0, 1.0, 1.0, 2.0, 7.0, 7.0, 2.0, 5.0, 1.0, 2.0, 5.0, 6.0, 1.0, 1.0, 1.0, 1.0, 3.0, 2.0, 4.0, 3.0, 1.0, 6.0, 5.0, 1.0, 7.0, 5.0, 6.0, 7.0, 2.0, 3.0, 1.0, 2.0, 7.0, 5.0, 1.0, 3.0, 3.0, 5.0, 3.0, 1.0, 5.0, 4.0, 6.0, 4.0, 5.0, 3.0, 5.0, 6.0, 1.0, 7.0, 6.0, 1.0, 1.0, 1.0, 2.0, 7.0, 2.0, 4.0, 2.0, 7.0, 7.0, 2.0, 1.0, 1.0, 6.0, 1.0, 2.0, 1.0, 2.0, 6.0, 6.0, 1.0, 3.0, 4.0, 2.0, 3.0, 2.0, 4.0, 1.0, 4.0, 6.0, 1.0, 1.0, 3.0, 2.0, 6.0, 2.0, 2.0, 2.0, 2.0, 3.0, 5.0, 7.0, 3.0, 5.0, 3.0, 3.0, 3.0, 4.0, 3.0, 1.0, 3.0, 3.0, 2.0, 4.0, 4.0, 5.0, 5.0, 2.0, 3.0, 7.0, 3.0, 7.0, 1.0, 2.0, 2.0, 2.0, 7.0, 5.0, 6.0, 5.0, 1.0, 5.0, 1.0, 3.0, 1.0, 1.0, 2.0, 1.0, 3.0, 2.0, 3.0, 6.0, 2.0, 3.0, 2.0, 6.0, 3.0, 4.0, 5.0, 5.0, 5.0, 5.0, 2.0, 2.0, 5.0, 2.0, 4.0, 1.0, 2.0, 3.0, 1.0, 4.0, 4.0, 6.0, 1.0, 5.0, 4.0, 5.0, 4.0, 1.0, 4.0, 4.0, 7.0, 3.0, 5.0, 4.0, 3.0, 3.0, 1.0, 2.0, 6.0, 2.0, 2.0, 2.0, 5.0, 3.0, 6.0, 1.0, 6.0, 7.0, 7.0, 2.0, 7.0, 7.0, 2.0, 2.0, 2.0, 1.0, 2.0, 7.0, 1.0, 3.0, 6.0, 2.0, 6.0, 2.0, 3.0, 7.0, 7.0, 2.0, 2.0, 3.0, 6.0, 4.0, 3.0, 6.0, 2.0, 6.0, 5.0, 4.0, 6.0, 7.0, 2.0, 2.0, 4.0, 3.0, 2.0, 7.0, 5.0, 5.0, 7.0, 6.0, 3.0, 2.0, 4.0, 7.0, 4.0, 1.0, 6.0, 2.0, 2.0, 3.0, 6.0, 3.0, 5.0, 4.0, 3.0, 1.0, 5.0, 6.0, 7.0, 1.0, 1.0, 1.0, 7.0, 5.0, 7.0, 6.0, 7.0, 4.0, 2.0, 2.0, 5.0, 4.0, 2.0, 7.0, 2.0, 2.0, 1.0, 6.0, 2.0, 1.0, 4.0, 2.0, 4.0, 2.0, 6.0, 3.0, 6.0, 6.0, 2.0, 6.0, 2.0, 4.0, 1.0, 4.0, 3.0, 7.0, 6.0, 6.0, 6.0, 1.0, 6.0, 5.0, 7.0, 6.0, 7.0, 2.0, 2.0, 7.0, 6.0, 7.0, 7.0, 5.0, 7.0, 2.0, 2.0, 1.0, 2.0, 7.0, 3.0, 1.0, 1.0, 4.0, 2.0, 3.0, 2.0, 2.0, 7.0, 2.0, 7.0, 2.0, 2.0, 1.0, 2.0, 5.0, 2.0, 2.0, 7.0, 1.0, 6.0, 6.0, 1.0, 2.0, 5.0, 2.0, 2.0, 6.0, 2.0, 5.0, 3.0, 2.0, 2.0, 4.0, 1.0, 3.0, 1.0, 2.0, 1.0, 3.0, 7.0], dtype=np.float32).reshape(1330,1)
partyid7=torch.tensor(partyid7)
educ1= np.array([2.0, 2.0, 2.0, 2.0, 1.0, 4.0, 2.0, 3.0, 3.0, 2.0, 2.0, 2.0, 1.0, 3.0, 2.0, 2.0, 1.0, 4.0, 2.0, 3.0, 1.0, 2.0, 2.0, 1.0, 2.0, 2.0, 2.0, 4.0, 1.0, 3.0, 3.0, 1.0, 3.0, 2.0, 3.0, 2.0, 2.0, 2.0, 3.0, 2.0, 2.0, 2.0, 2.0, 4.0, 2.0, 2.0, 4.0, 1.0, 2.0, 3.0, 3.0, 4.0, 4.0, 2.0, 2.0, 2.0, 4.0, 1.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 1.0, 1.0, 3.0, 3.0, 1.0, 2.0, 2.0, 2.0, 3.0, 2.0, 2.0, 2.0, 2.0, 2.0, 4.0, 2.0, 4.0, 3.0, 4.0, 4.0, 2.0, 3.0, 2.0, 2.0, 1.0, 3.0, 2.0, 4.0, 1.0, 3.0, 4.0, 3.0, 2.0, 2.0, 3.0, 2.0, 2.0, 2.0, 2.0, 3.0, 2.0, 3.0, 3.0, 2.0, 2.0, 2.0, 3.0, 4.0, 4.0, 2.0, 2.0, 4.0, 4.0, 1.0, 4.0, 4.0, 1.0, 1.0, 3.0, 2.0, 2.0, 4.0, 2.0, 2.0, 2.0, 4.0, 2.0, 2.0, 2.0, 2.0, 4.0, 2.0, 3.0, 3.0, 1.0, 3.0, 2.0, 3.0, 2.0, 4.0, 2.0, 2.0, 2.0, 2.0, 3.0, 2.0, 1.0, 3.0, 2.0, 2.0, 2.0, 1.0, 2.0, 2.0, 3.0, 4.0, 1.0, 2.0, 2.0, 2.0, 3.0, 2.0, 2.0, 2.0, 2.0, 4.0, 2.0, 2.0, 1.0, 4.0, 2.0, 2.0, 4.0, 3.0, 2.0, 2.0, 4.0, 1.0, 2.0, 1.0, 2.0, 3.0, 2.0, 2.0, 3.0, 4.0, 2.0, 4.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 4.0, 3.0, 2.0, 1.0, 2.0, 2.0, 3.0, 1.0, 4.0, 1.0, 2.0, 3.0, 3.0, 2.0, 4.0, 2.0, 2.0, 2.0, 2.0, 3.0, 4.0, 2.0, 3.0, 2.0, 2.0, 4.0, 1.0, 2.0, 1.0, 1.0, 1.0, 3.0, 2.0, 4.0, 2.0, 3.0, 4.0, 2.0, 4.0, 4.0, 2.0, 2.0, 1.0, 4.0, 1.0, 1.0, 2.0, 3.0, 3.0, 2.0, 2.0, 3.0, 4.0, 1.0, 2.0, 2.0, 2.0, 4.0, 4.0, 4.0, 2.0, 4.0, 2.0, 2.0, 4.0, 3.0, 1.0, 2.0, 2.0, 2.0, 4.0, 2.0, 2.0, 1.0, 2.0, 3.0, 2.0, 3.0, 4.0, 4.0, 4.0, 2.0, 2.0, 3.0, 4.0, 4.0, 2.0, 4.0, 1.0, 1.0, 1.0, 3.0, 4.0, 2.0, 3.0, 3.0, 3.0, 3.0, 4.0, 3.0, 2.0, 2.0, 1.0, 1.0, 2.0, 3.0, 1.0, 4.0, 3.0, 2.0, 1.0, 2.0, 1.0, 3.0, 4.0, 3.0, 3.0, 1.0, 2.0, 4.0, 2.0, 2.0, 2.0, 2.0, 4.0, 4.0, 2.0, 3.0, 3.0, 3.0, 2.0, 2.0, 2.0, 2.0, 3.0, 2.0, 4.0, 4.0, 3.0, 2.0, 4.0, 4.0, 2.0, 2.0, 3.0, 2.0, 2.0, 3.0, 3.0, 1.0, 1.0, 2.0, 2.0, 4.0, 2.0, 2.0, 1.0, 2.0, 2.0, 1.0, 4.0, 2.0, 1.0, 1.0, 2.0, 2.0, 1.0, 2.0, 3.0, 1.0, 2.0, 1.0, 1.0, 1.0, 1.0, 2.0, 3.0, 2.0, 1.0, 2.0, 3.0, 1.0, 2.0, 2.0, 4.0, 3.0, 1.0, 1.0, 2.0, 3.0, 3.0, 2.0, 4.0, 2.0, 2.0, 1.0, 3.0, 1.0, 4.0, 2.0, 3.0, 3.0, 1.0, 2.0, 2.0, 2.0, 4.0, 2.0, 2.0, 1.0, 2.0, 2.0, 2.0, 2.0, 2.0, 3.0, 3.0, 2.0, 4.0, 2.0, 2.0, 2.0, 3.0, 2.0, 3.0, 3.0, 4.0, 2.0, 3.0, 3.0, 3.0, 1.0, 2.0, 2.0, 2.0, 2.0, 2.0, 1.0, 2.0, 4.0, 4.0, 1.0, 1.0, 2.0, 4.0, 2.0, 2.0, 2.0, 2.0, 2.0, 3.0, 2.0, 2.0, 4.0, 3.0, 2.0, 4.0, 3.0, 4.0, 2.0, 3.0, 2.0, 2.0, 3.0, 1.0, 3.0, 2.0, 4.0, 3.0, 4.0, 2.0, 2.0, 4.0, 2.0, 4.0, 3.0, 2.0, 1.0, 2.0, 2.0, 3.0, 1.0, 4.0, 4.0, 2.0, 2.0, 2.0, 4.0, 4.0, 3.0, 2.0, 2.0, 2.0, 1.0, 2.0, 2.0, 2.0, 2.0, 4.0, 2.0, 2.0, 3.0, 3.0, 1.0, 2.0, 3.0, 4.0, 2.0, 2.0, 2.0, 4.0, 4.0, 2.0, 3.0, 3.0, 2.0, 4.0, 2.0, 2.0, 2.0, 1.0, 4.0, 1.0, 3.0, 4.0, 4.0, 3.0, 2.0, 2.0, 2.0, 2.0, 2.0, 3.0, 3.0, 1.0, 2.0, 3.0, 4.0, 2.0, 2.0, 2.0, 2.0, 2.0, 3.0, 1.0, 2.0, 1.0, 2.0, 2.0, 2.0, 4.0, 4.0, 4.0, 3.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 4.0, 2.0, 4.0, 2.0, 2.0, 4.0, 1.0, 3.0, 1.0, 3.0, 2.0, 4.0, 4.0, 3.0, 2.0, 2.0, 3.0, 3.0, 1.0, 3.0, 2.0, 3.0, 4.0, 4.0, 2.0, 3.0, 4.0, 2.0, 2.0, 3.0, 3.0, 3.0, 1.0, 2.0, 1.0, 4.0, 2.0, 3.0, 4.0, 2.0, 2.0, 3.0, 2.0, 3.0, 4.0, 2.0, 4.0, 4.0, 2.0, 1.0, 4.0, 3.0, 2.0, 4.0, 2.0, 4.0, 4.0, 2.0, 3.0, 2.0, 2.0, 2.0, 3.0, 3.0, 1.0, 2.0, 2.0, 4.0, 4.0, 3.0, 2.0, 4.0, 3.0, 3.0, 3.0, 3.0, 2.0, 1.0, 1.0, 3.0, 2.0, 2.0, 2.0, 4.0, 4.0, 2.0, 2.0, 2.0, 4.0, 3.0, 2.0, 3.0, 2.0, 2.0, 4.0, 4.0, 2.0, 1.0, 2.0, 4.0, 2.0, 1.0, 3.0, 1.0, 2.0, 4.0, 2.0, 2.0, 4.0, 4.0, 4.0, 1.0, 1.0, 2.0, 2.0, 2.0, 3.0, 2.0, 2.0, 2.0, 4.0, 2.0, 3.0, 2.0, 3.0, 4.0, 3.0, 2.0, 2.0, 3.0, 2.0, 2.0, 3.0, 2.0, 2.0, 2.0, 1.0, 1.0, 2.0, 3.0, 4.0, 1.0, 2.0, 1.0, 2.0, 4.0, 2.0, 4.0, 3.0, 2.0, 4.0, 4.0, 1.0, 4.0, 2.0, 1.0, 3.0, 2.0, 2.0, 2.0, 3.0, 1.0, 1.0, 1.0, 2.0, 4.0, 2.0, 2.0, 2.0, 4.0, 3.0, 1.0, 4.0, 3.0, 2.0, 3.0, 1.0, 2.0, 1.0, 3.0, 3.0, 2.0, 3.0, 2.0, 4.0, 3.0, 4.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 4.0, 3.0, 1.0, 3.0, 4.0, 2.0, 4.0, 4.0, 2.0, 2.0, 2.0, 3.0, 3.0, 4.0, 2.0, 2.0, 2.0, 2.0, 1.0, 2.0, 3.0, 2.0, 2.0, 2.0, 2.0, 2.0, 3.0, 2.0, 1.0, 3.0, 3.0, 2.0, 2.0, 4.0, 1.0, 4.0, 2.0, 1.0, 1.0, 2.0, 3.0, 3.0, 2.0, 3.0, 2.0, 4.0, 3.0, 4.0, 1.0, 3.0, 1.0, 2.0, 2.0, 4.0, 2.0, 2.0, 4.0, 3.0, 3.0, 3.0, 2.0, 3.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 3.0, 2.0, 3.0, 4.0, 2.0, 3.0, 2.0, 3.0, 1.0, 4.0, 3.0, 1.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 1.0, 4.0, 2.0, 1.0, 4.0, 3.0, 3.0, 4.0, 3.0, 3.0, 2.0, 4.0, 2.0, 4.0, 2.0, 2.0, 1.0, 3.0, 2.0, 3.0, 2.0, 3.0, 4.0, 3.0, 2.0, 4.0, 4.0, 2.0, 2.0, 4.0, 2.0, 4.0, 3.0, 4.0, 1.0, 2.0, 3.0, 1.0, 1.0, 4.0, 4.0, 4.0, 1.0, 2.0, 2.0, 4.0, 3.0, 2.0, 3.0, 1.0, 1.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 3.0, 2.0, 2.0, 3.0, 2.0, 1.0, 2.0, 2.0, 4.0, 3.0, 1.0, 4.0, 2.0, 2.0, 4.0, 4.0, 4.0, 4.0, 2.0, 4.0, 2.0, 4.0, 3.0, 2.0, 4.0, 2.0, 2.0, 3.0, 2.0, 1.0, 3.0, 2.0, 1.0, 2.0, 2.0, 2.0, 2.0, 3.0, 3.0, 3.0, 2.0, 2.0, 2.0, 2.0, 3.0, 3.0, 2.0, 4.0, 4.0, 2.0, 3.0, 2.0, 2.0, 3.0, 1.0, 3.0, 2.0, 2.0, 2.0, 4.0, 2.0, 3.0, 3.0, 2.0, 3.0, 4.0, 2.0, 4.0, 3.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 3.0, 3.0, 2.0, 4.0, 1.0, 2.0, 2.0, 1.0, 3.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 3.0, 2.0, 4.0, 4.0, 4.0, 2.0, 2.0, 3.0, 4.0, 2.0, 3.0, 3.0, 2.0, 2.0, 4.0, 2.0, 4.0, 2.0, 1.0, 3.0, 4.0, 1.0, 2.0, 2.0, 4.0, 4.0, 2.0, 4.0, 1.0, 2.0, 2.0, 2.0, 3.0, 4.0, 4.0, 2.0, 3.0, 2.0, 2.0, 2.0, 2.0, 4.0, 2.0, 2.0, 4.0, 1.0, 3.0, 2.0, 1.0, 2.0, 2.0, 2.0, 2.0, 2.0, 3.0, 2.0, 2.0, 4.0, 2.0, 3.0, 1.0, 2.0, 3.0, 2.0, 2.0, 2.0, 2.0, 3.0, 2.0, 2.0, 3.0, 2.0, 4.0, 2.0, 2.0, 2.0, 1.0, 2.0, 2.0, 4.0, 2.0, 2.0, 4.0, 4.0, 1.0, 4.0, 3.0, 1.0, 2.0, 3.0, 4.0, 3.0, 2.0, 2.0, 4.0, 4.0, 4.0, 3.0, 3.0, 2.0, 2.0, 2.0, 3.0, 4.0, 3.0, 2.0, 3.0, 2.0, 2.0, 4.0, 2.0, 2.0, 2.0, 2.0, 2.0, 1.0, 2.0, 2.0, 4.0, 4.0, 4.0, 2.0, 4.0, 3.0, 1.0, 3.0, 2.0, 2.0, 2.0, 3.0, 4.0, 1.0, 2.0, 2.0, 4.0, 4.0, 3.0, 2.0, 2.0, 2.0, 2.0, 1.0, 2.0, 2.0, 2.0, 2.0, 1.0, 1.0, 2.0, 3.0, 2.0, 3.0, 4.0, 4.0, 3.0, 2.0, 2.0, 2.0, 2.0, 2.0, 1.0, 3.0, 2.0, 3.0, 1.0, 2.0, 4.0, 3.0, 2.0, 1.0, 2.0, 2.0, 3.0, 3.0, 2.0, 2.0, 2.0, 3.0, 3.0, 1.0, 2.0, 2.0, 4.0, 2.0, 3.0, 3.0, 3.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 3.0, 2.0, 2.0, 2.0, 1.0, 2.0, 3.0, 4.0, 2.0, 3.0, 4.0, 4.0, 4.0, 3.0, 2.0, 2.0, 2.0, 2.0, 2.0, 4.0, 2.0, 3.0, 3.0, 2.0, 4.0, 2.0, 2.0, 2.0, 2.0, 3.0, 2.0, 2.0, 3.0, 2.0, 3.0, 2.0, 2.0, 3.0, 2.0, 2.0, 3.0, 3.0, 2.0, 2.0, 2.0, 3.0, 2.0, 2.0, 2.0, 2.0, 1.0, 4.0, 3.0, 4.0, 4.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 4.0, 1.0, 2.0, 4.0, 3.0, 3.0, 3.0, 4.0, 2.0, 2.0, 2.0, 2.0, 3.0, 2.0, 2.0, 2.0, 2.0, 2.0, 3.0, 2.0, 2.0, 4.0, 4.0, 4.0, 1.0, 1.0, 3.0, 2.0, 2.0, 3.0, 4.0, 1.0, 3.0, 4.0, 4.0, 3.0, 4.0, 4.0, 3.0, 4.0, 3.0, 1.0, 2.0, 3.0, 4.0, 1.0, 2.0, 4.0, 4.0, 4.0, 1.0, 3.0, 3.0, 2.0, 3.0, 3.0, 4.0, 3.0, 2.0, 2.0, 3.0, 2.0, 2.0, 2.0, 2.0, 4.0, 4.0, 2.0, 2.0, 2.0, 2.0, 1.0, 1.0, 1.0, 3.0, 2.0, 3.0, 2.0, 2.0, 4.0, 2.0, 2.0, 4.0, 2.0, 2.0], dtype=np.float32).reshape(1330,1)
educ1=torch.tensor(educ1)
income= np.array([3.0, 4.0, 4.0, 4.0, 1.0, 3.0, 5.0, 4.0, 4.0, 3.0, 2.0, 4.0, 1.0, 4.0, 4.0, 2.0, 3.0, 4.0, 1.0, 3.0, 1.0, 4.0, 3.0, 1.0, 2.0, 4.0, 3.0, 5.0, 3.0, 3.0, 1.0, 3.0, 4.0, 3.0, 3.0, 3.0, 4.0, 1.0, 3.0, 3.0, 4.0, 3.0, 3.0, 5.0, 2.0, 4.0, 5.0, 2.0, 4.0, 3.0, 4.0, 3.0, 3.0, 3.0, 3.0, 4.0, 2.0, 4.0, 4.0, 4.0, 3.0, 4.0, 4.0, 4.0, 5.0, 1.0, 1.0, 5.0, 1.0, 1.0, 4.0, 4.0, 4.0, 5.0, 3.0, 1.0, 4.0, 1.0, 3.0, 3.0, 1.0, 3.0, 4.0, 3.0, 5.0, 3.0, 4.0, 3.0, 3.0, 3.0, 3.0, 4.0, 5.0, 1.0, 4.0, 4.0, 4.0, 1.0, 3.0, 4.0, 3.0, 4.0, 3.0, 3.0, 3.0, 3.0, 3.0, 2.0, 4.0, 2.0, 4.0, 4.0, 3.0, 4.0, 3.0, 3.0, 4.0, 4.0, 2.0, 4.0, 4.0, 3.0, 3.0, 4.0, 1.0, 4.0, 4.0, 4.0, 1.0, 3.0, 4.0, 4.0, 3.0, 4.0, 4.0, 4.0, 3.0, 4.0, 4.0, 1.0, 4.0, 3.0, 3.0, 3.0, 5.0, 3.0, 3.0, 2.0, 4.0, 4.0, 3.0, 1.0, 1.0, 3.0, 1.0, 5.0, 3.0, 4.0, 4.0, 4.0, 4.0, 3.0, 4.0, 4.0, 4.0, 4.0, 3.0, 4.0, 4.0, 4.0, 4.0, 2.0, 2.0, 4.0, 4.0, 4.0, 5.0, 3.0, 4.0, 3.0, 1.0, 2.0, 3.0, 3.0, 3.0, 3.0, 5.0, 5.0, 1.0, 4.0, 3.0, 3.0, 3.0, 3.0, 3.0, 4.0, 4.0, 3.0, 3.0, 4.0, 2.0, 3.0, 4.0, 3.0, 3.0, 3.0, 4.0, 1.0, 2.0, 1.0, 3.0, 1.0, 4.0, 3.0, 3.0, 2.0, 4.0, 4.0, 4.0, 1.0, 4.0, 3.0, 3.0, 3.0, 4.0, 2.0, 3.0, 4.0, 4.0, 2.0, 3.0, 4.0, 3.0, 3.0, 4.0, 4.0, 3.0, 4.0, 4.0, 1.0, 3.0, 3.0, 3.0, 5.0, 1.0, 4.0, 2.0, 4.0, 1.0, 4.0, 4.0, 3.0, 1.0, 3.0, 4.0, 1.0, 4.0, 2.0, 4.0, 4.0, 5.0, 4.0, 3.0, 3.0, 3.0, 4.0, 4.0, 1.0, 3.0, 1.0, 3.0, 3.0, 3.0, 3.0, 4.0, 2.0, 2.0, 3.0, 3.0, 3.0, 4.0, 4.0, 4.0, 3.0, 3.0, 2.0, 4.0, 2.0, 3.0, 1.0, 2.0, 4.0, 4.0, 3.0, 3.0, 3.0, 3.0, 5.0, 3.0, 3.0, 5.0, 2.0, 4.0, 4.0, 3.0, 2.0, 4.0, 4.0, 3.0, 4.0, 3.0, 4.0, 4.0, 4.0, 3.0, 4.0, 3.0, 1.0, 4.0, 1.0, 3.0, 4.0, 4.0, 2.0, 4.0, 3.0, 5.0, 3.0, 1.0, 4.0, 4.0, 3.0, 2.0, 3.0, 3.0, 1.0, 3.0, 4.0, 3.0, 4.0, 1.0, 4.0, 3.0, 4.0, 2.0, 4.0, 1.0, 3.0, 2.0, 3.0, 3.0, 4.0, 3.0, 5.0, 4.0, 3.0, 2.0, 1.0, 4.0, 4.0, 4.0, 2.0, 3.0, 3.0, 1.0, 4.0, 4.0, 1.0, 1.0, 4.0, 3.0, 3.0, 4.0, 1.0, 5.0, 3.0, 1.0, 3.0, 4.0, 3.0, 1.0, 1.0, 3.0, 1.0, 3.0, 3.0, 3.0, 2.0, 2.0, 4.0, 3.0, 4.0, 4.0, 3.0, 4.0, 4.0, 3.0, 1.0, 1.0, 1.0, 2.0, 2.0, 3.0, 1.0, 1.0, 3.0, 3.0, 2.0, 3.0, 3.0, 3.0, 3.0, 4.0, 3.0, 3.0, 4.0, 4.0, 3.0, 3.0, 3.0, 3.0, 2.0, 4.0, 3.0, 4.0, 1.0, 4.0, 3.0, 2.0, 3.0, 2.0, 4.0, 1.0, 4.0, 3.0, 2.0, 3.0, 2.0, 3.0, 2.0, 3.0, 5.0, 4.0, 2.0, 2.0, 3.0, 5.0, 2.0, 3.0, 3.0, 4.0, 3.0, 3.0, 3.0, 3.0, 3.0, 4.0, 3.0, 4.0, 2.0, 4.0, 3.0, 4.0, 1.0, 1.0, 3.0, 1.0, 3.0, 3.0, 5.0, 2.0, 4.0, 3.0, 3.0, 2.0, 3.0, 4.0, 3.0, 1.0, 1.0, 3.0, 4.0, 3.0, 4.0, 3.0, 4.0, 1.0, 3.0, 3.0, 3.0, 5.0, 3.0, 4.0, 3.0, 2.0, 2.0, 4.0, 4.0, 3.0, 4.0, 4.0, 3.0, 1.0, 4.0, 1.0, 2.0, 3.0, 4.0, 3.0, 2.0, 4.0, 5.0, 4.0, 1.0, 4.0, 4.0, 1.0, 3.0, 3.0, 5.0, 4.0, 2.0, 3.0, 3.0, 1.0, 4.0, 4.0, 5.0, 3.0, 5.0, 4.0, 1.0, 4.0, 2.0, 4.0, 4.0, 3.0, 1.0, 2.0, 3.0, 3.0, 3.0, 3.0, 4.0, 3.0, 3.0, 4.0, 4.0, 3.0, 2.0, 3.0, 4.0, 3.0, 3.0, 3.0, 5.0, 3.0, 4.0, 3.0, 4.0, 1.0, 3.0, 4.0, 2.0, 2.0, 4.0, 3.0, 5.0, 3.0, 3.0, 4.0, 4.0, 4.0, 4.0, 2.0, 3.0, 3.0, 3.0, 3.0, 5.0, 4.0, 4.0, 3.0, 3.0, 5.0, 4.0, 3.0, 4.0, 5.0, 4.0, 3.0, 3.0, 4.0, 3.0, 3.0, 1.0, 3.0, 1.0, 4.0, 2.0, 4.0, 5.0, 1.0, 3.0, 4.0, 4.0, 4.0, 3.0, 4.0, 5.0, 4.0, 1.0, 3.0, 5.0, 1.0, 4.0, 3.0, 3.0, 4.0, 3.0, 4.0, 3.0, 4.0, 4.0, 2.0, 4.0, 2.0, 4.0, 1.0, 3.0, 4.0, 4.0, 3.0, 4.0, 4.0, 4.0, 4.0, 4.0, 4.0, 1.0, 1.0, 3.0, 3.0, 3.0, 4.0, 4.0, 5.0, 1.0, 3.0, 4.0, 4.0, 3.0, 4.0, 2.0, 1.0, 1.0, 4.0, 5.0, 3.0, 3.0, 4.0, 4.0, 3.0, 1.0, 4.0, 3.0, 4.0, 5.0, 3.0, 3.0, 3.0, 5.0, 4.0, 1.0, 1.0, 2.0, 3.0, 3.0, 1.0, 3.0, 4.0, 4.0, 4.0, 3.0, 3.0, 3.0, 4.0, 4.0, 3.0, 4.0, 4.0, 3.0, 3.0, 4.0, 4.0, 3.0, 3.0, 4.0, 1.0, 2.0, 3.0, 1.0, 4.0, 3.0, 3.0, 2.0, 4.0, 3.0, 1.0, 5.0, 4.0, 4.0, 5.0, 2.0, 1.0, 1.0, 3.0, 3.0, 2.0, 3.0, 1.0, 3.0, 3.0, 3.0, 3.0, 1.0, 2.0, 3.0, 4.0, 3.0, 3.0, 4.0, 4.0, 3.0, 3.0, 3.0, 4.0, 4.0, 2.0, 3.0, 1.0, 3.0, 3.0, 1.0, 4.0, 4.0, 3.0, 4.0, 4.0, 4.0, 4.0, 3.0, 3.0, 4.0, 4.0, 4.0, 5.0, 4.0, 3.0, 5.0, 4.0, 3.0, 5.0, 3.0, 3.0, 3.0, 3.0, 3.0, 4.0, 1.0, 4.0, 3.0, 3.0, 4.0, 1.0, 2.0, 3.0, 3.0, 3.0, 4.0, 3.0, 3.0, 4.0, 4.0, 3.0, 4.0, 4.0, 2.0, 3.0, 5.0, 2.0, 4.0, 3.0, 2.0, 3.0, 3.0, 1.0, 2.0, 3.0, 4.0, 5.0, 4.0, 3.0, 4.0, 2.0, 4.0, 1.0, 3.0, 3.0, 4.0, 1.0, 3.0, 1.0, 3.0, 3.0, 4.0, 4.0, 4.0, 4.0, 4.0, 5.0, 5.0, 4.0, 3.0, 4.0, 3.0, 5.0, 1.0, 4.0, 3.0, 3.0, 4.0, 2.0, 1.0, 3.0, 3.0, 2.0, 2.0, 3.0, 3.0, 4.0, 3.0, 2.0, 3.0, 5.0, 4.0, 2.0, 4.0, 2.0, 4.0, 4.0, 4.0, 4.0, 1.0, 4.0, 3.0, 4.0, 4.0, 3.0, 1.0, 3.0, 2.0, 3.0, 3.0, 2.0, 4.0, 3.0, 4.0, 1.0, 4.0, 4.0, 2.0, 5.0, 4.0, 4.0, 3.0, 3.0, 2.0, 3.0, 3.0, 4.0, 3.0, 4.0, 5.0, 2.0, 4.0, 3.0, 4.0, 5.0, 3.0, 3.0, 4.0, 1.0, 1.0, 4.0, 3.0, 4.0, 3.0, 3.0, 4.0, 4.0, 2.0, 3.0, 3.0, 3.0, 1.0, 3.0, 4.0, 4.0, 1.0, 3.0, 4.0, 3.0, 4.0, 3.0, 4.0, 3.0, 4.0, 2.0, 5.0, 3.0, 3.0, 1.0, 1.0, 2.0, 4.0, 2.0, 4.0, 5.0, 4.0, 1.0, 3.0, 3.0, 3.0, 3.0, 4.0, 1.0, 3.0, 3.0, 4.0, 5.0, 4.0, 4.0, 4.0, 3.0, 1.0, 2.0, 3.0, 3.0, 4.0, 4.0, 3.0, 3.0, 5.0, 1.0, 3.0, 4.0, 4.0, 3.0, 4.0, 3.0, 3.0, 2.0, 3.0, 1.0, 3.0, 3.0, 4.0, 4.0, 4.0, 3.0, 1.0, 2.0, 3.0, 3.0, 3.0, 1.0, 3.0, 3.0, 1.0, 3.0, 2.0, 1.0, 1.0, 5.0, 3.0, 3.0, 4.0, 5.0, 3.0, 3.0, 3.0, 5.0, 5.0, 4.0, 3.0, 3.0, 3.0, 3.0, 4.0, 4.0, 2.0, 2.0, 2.0, 4.0, 3.0, 1.0, 1.0, 1.0, 5.0, 2.0, 3.0, 5.0, 5.0, 4.0, 5.0, 4.0, 4.0, 3.0, 3.0, 4.0, 2.0, 3.0, 4.0, 3.0, 2.0, 1.0, 3.0, 3.0, 2.0, 1.0, 1.0, 4.0, 3.0, 4.0, 4.0, 2.0, 3.0, 2.0, 3.0, 4.0, 3.0, 3.0, 3.0, 3.0, 3.0, 4.0, 4.0, 1.0, 4.0, 3.0, 1.0, 5.0, 2.0, 4.0, 3.0, 5.0, 3.0, 1.0, 1.0, 4.0, 4.0, 3.0, 4.0, 3.0, 2.0, 3.0, 2.0, 4.0, 5.0, 4.0, 4.0, 2.0, 4.0, 1.0, 4.0, 4.0, 2.0, 3.0, 4.0, 5.0, 4.0, 4.0, 4.0, 4.0, 3.0, 5.0, 4.0, 1.0, 4.0, 2.0, 2.0, 3.0, 4.0, 3.0, 2.0, 5.0, 4.0, 4.0, 5.0, 1.0, 4.0, 2.0, 1.0, 3.0, 3.0, 3.0, 4.0, 1.0, 3.0, 2.0, 3.0, 1.0, 2.0, 1.0, 4.0, 3.0, 5.0, 1.0, 3.0, 4.0, 2.0, 3.0, 3.0, 1.0, 5.0, 4.0, 4.0, 3.0, 4.0, 3.0, 3.0, 2.0, 4.0, 1.0, 4.0, 1.0, 2.0, 3.0, 3.0, 3.0, 4.0, 4.0, 4.0, 5.0, 3.0, 4.0, 2.0, 4.0, 3.0, 3.0, 4.0, 4.0, 1.0, 1.0, 4.0, 1.0, 3.0, 3.0, 3.0, 3.0, 3.0, 1.0, 2.0, 4.0, 3.0, 3.0, 3.0, 4.0, 1.0, 3.0, 3.0, 5.0, 1.0, 5.0, 1.0, 1.0, 4.0, 3.0, 1.0, 4.0, 1.0, 3.0, 1.0, 3.0, 3.0, 4.0, 2.0, 1.0, 3.0, 3.0, 5.0, 3.0, 4.0, 5.0, 5.0, 4.0, 1.0, 2.0, 4.0, 4.0, 3.0, 1.0, 5.0, 3.0, 4.0, 3.0, 1.0, 3.0, 4.0, 4.0, 1.0, 3.0, 1.0, 1.0, 3.0, 3.0, 4.0, 4.0, 1.0, 3.0, 1.0, 3.0, 3.0, 2.0, 2.0, 3.0, 3.0, 3.0, 5.0, 4.0, 4.0, 4.0, 3.0, 3.0, 4.0, 2.0, 1.0, 3.0, 1.0, 4.0, 3.0, 4.0, 1.0, 4.0, 4.0, 2.0, 4.0, 4.0, 1.0, 4.0, 4.0, 5.0, 2.0, 3.0, 4.0, 3.0, 3.0, 5.0, 4.0, 2.0, 3.0, 3.0, 4.0, 3.0, 1.0, 4.0, 4.0, 5.0, 3.0, 4.0, 3.0, 3.0, 4.0, 2.0, 4.0, 4.0, 4.0, 4.0, 5.0, 4.0, 4.0, 2.0, 4.0, 5.0, 1.0, 4.0, 2.0, 3.0, 4.0, 1.0, 1.0, 3.0, 3.0, 4.0, 3.0, 4.0, 3.0, 2.0, 3.0, 1.0, 4.0, 1.0, 4.0, 4.0, 4.0, 1.0, 3.0, 3.0, 3.0, 1.0, 3.0, 3.0, 3.0, 3.0, 1.0, 4.0, 1.0, 2.0, 4.0, 4.0, 3.0, 4.0, 2.0, 3.0, 4.0, 2.0, 5.0, 4.0, 3.0], dtype=np.float32).reshape(1330,1)
income=torch.tensor(income)
real_ideo= np.array([5.0, 5.0, 6.0, 4.0, 5.0, 5.0, 7.0, 5.0, 6.0, 4.0, 2.0, 2.0, 3.0, 2.0, 6.0, 6.0, 2.0, 7.0, 2.0, 4.0, 6.0, 4.0, 5.0, 6.0, 4.0, 4.0, 3.0, 6.0, 2.0, 4.0, 4.0, 4.0, 2.0, 5.0, 6.0, 4.0, 3.0, 2.0, 5.0, 4.0, 4.0, 6.0, 6.0, 3.0, 2.0, 4.0, 3.0, 6.0, 2.0, 2.0, 4.0, 4.0, 4.0, 4.0, 5.0, 5.0, 6.0, 5.0, 5.0, 2.0, 5.0, 4.0, 5.0, 6.0, 1.0, 4.0, 2.0, 5.0, 3.0, 4.0, 6.0, 3.0, 5.0, 4.0, 4.0, 6.0, 4.0, 3.0, 6.0, 5.0, 6.0, 3.0, 4.0, 3.0, 5.0, 5.0, 4.0, 5.0, 2.0, 4.0, 5.0, 4.0, 3.0, 4.0, 3.0, 6.0, 2.0, 5.0, 7.0, 3.0, 3.0, 4.0, 4.0, 3.0, 4.0, 6.0, 6.0, 5.0, 4.0, 7.0, 4.0, 7.0, 4.0, 4.0, 3.0, 5.0, 3.0, 5.0, 3.0, 6.0, 5.0, 5.0, 3.0, 4.0, 6.0, 3.0, 2.0, 5.0, 6.0, 2.0, 3.0, 4.0, 4.0, 4.0, 6.0, 4.0, 4.0, 5.0, 4.0, 3.0, 6.0, 5.0, 4.0, 4.0, 6.0, 4.0, 4.0, 5.0, 2.0, 4.0, 5.0, 6.0, 3.0, 4.0, 6.0, 6.0, 5.0, 6.0, 4.0, 4.0, 6.0, 6.0, 5.0, 6.0, 3.0, 4.0, 5.0, 3.0, 4.0, 4.0, 2.0, 6.0, 3.0, 5.0, 6.0, 6.0, 3.0, 2.0, 5.0, 5.0, 3.0, 1.0, 4.0, 4.0, 1.0, 4.0, 4.0, 5.0, 4.0, 5.0, 3.0, 4.0, 5.0, 2.0, 3.0, 4.0, 5.0, 4.0, 5.0, 3.0, 4.0, 4.0, 5.0, 2.0, 4.0, 4.0, 4.0, 2.0, 5.0, 2.0, 3.0, 7.0, 4.0, 4.0, 5.0, 4.0, 5.0, 2.0, 3.0, 1.0, 4.0, 6.0, 6.0, 4.0, 5.0, 4.0, 6.0, 3.0, 4.0, 6.0, 4.0, 4.0, 4.0, 4.0, 5.0, 5.0, 4.0, 5.0, 5.0, 4.0, 2.0, 4.0, 3.0, 4.0, 5.0, 2.0, 5.0, 3.0, 1.0, 6.0, 4.0, 5.0, 5.0, 6.0, 4.0, 6.0, 4.0, 4.0, 5.0, 3.0, 6.0, 5.0, 4.0, 5.0, 6.0, 4.0, 4.0, 3.0, 4.0, 6.0, 4.0, 4.0, 6.0, 4.0, 4.0, 3.0, 2.0, 4.0, 4.0, 4.0, 5.0, 2.0, 3.0, 4.0, 5.0, 6.0, 5.0, 4.0, 4.0, 4.0, 6.0, 4.0, 4.0, 5.0, 5.0, 5.0, 5.0, 4.0, 4.0, 4.0, 4.0, 3.0, 5.0, 4.0, 5.0, 4.0, 4.0, 4.0, 4.0, 5.0, 3.0, 4.0, 6.0, 4.0, 4.0, 5.0, 5.0, 5.0, 5.0, 4.0, 4.0, 3.0, 4.0, 4.0, 4.0, 5.0, 3.0, 5.0, 7.0, 3.0, 6.0, 5.0, 5.0, 4.0, 4.0, 4.0, 1.0, 4.0, 5.0, 2.0, 1.0, 4.0, 5.0, 4.0, 2.0, 6.0, 3.0, 4.0, 4.0, 5.0, 5.0, 5.0, 2.0, 4.0, 6.0, 5.0, 4.0, 2.0, 4.0, 5.0, 4.0, 4.0, 3.0, 6.0, 1.0, 4.0, 4.0, 5.0, 6.0, 4.0, 4.0, 4.0, 4.0, 5.0, 4.0, 4.0, 4.0, 4.0, 2.0, 2.0, 4.0, 4.0, 4.0, 5.0, 4.0, 5.0, 5.0, 3.0, 4.0, 5.0, 4.0, 3.0, 4.0, 2.0, 2.0, 2.0, 4.0, 5.0, 4.0, 4.0, 1.0, 4.0, 4.0, 3.0, 4.0, 7.0, 4.0, 6.0, 2.0, 6.0, 4.0, 4.0, 6.0, 4.0, 4.0, 4.0, 2.0, 5.0, 3.0, 4.0, 1.0, 6.0, 4.0, 4.0, 5.0, 4.0, 4.0, 5.0, 4.0, 6.0, 5.0, 3.0, 6.0, 5.0, 4.0, 4.0, 4.0, 3.0, 5.0, 4.0, 6.0, 4.0, 5.0, 7.0, 4.0, 5.0, 6.0, 4.0, 5.0, 6.0, 5.0, 3.0, 6.0, 2.0, 4.0, 5.0, 7.0, 4.0, 4.0, 2.0, 4.0, 5.0, 2.0, 4.0, 2.0, 6.0, 2.0, 3.0, 6.0, 4.0, 5.0, 3.0, 4.0, 2.0, 2.0, 3.0, 6.0, 6.0, 3.0, 5.0, 3.0, 2.0, 5.0, 4.0, 2.0, 6.0, 4.0, 2.0, 4.0, 5.0, 2.0, 3.0, 5.0, 4.0, 4.0, 6.0, 2.0, 5.0, 4.0, 6.0, 5.0, 5.0, 6.0, 6.0, 7.0, 6.0, 4.0, 4.0, 5.0, 4.0, 4.0, 6.0, 5.0, 3.0, 6.0, 4.0, 6.0, 5.0, 3.0, 4.0, 3.0, 4.0, 4.0, 6.0, 6.0, 4.0, 5.0, 5.0, 4.0, 5.0, 2.0, 6.0, 5.0, 4.0, 4.0, 6.0, 1.0, 4.0, 6.0, 3.0, 4.0, 5.0, 4.0, 4.0, 2.0, 4.0, 4.0, 4.0, 5.0, 4.0, 4.0, 5.0, 2.0, 6.0, 5.0, 3.0, 5.0, 5.0, 4.0, 2.0, 5.0, 6.0, 5.0, 4.0, 6.0, 7.0, 3.0, 5.0, 4.0, 3.0, 4.0, 3.0, 4.0, 5.0, 3.0, 4.0, 1.0, 4.0, 4.0, 2.0, 5.0, 3.0, 5.0, 5.0, 5.0, 5.0, 4.0, 2.0, 6.0, 7.0, 3.0, 3.0, 4.0, 5.0, 3.0, 5.0, 4.0, 4.0, 4.0, 2.0, 5.0, 4.0, 6.0, 5.0, 5.0, 3.0, 6.0, 3.0, 2.0, 5.0, 6.0, 5.0, 3.0, 4.0, 5.0, 4.0, 5.0, 6.0, 5.0, 4.0, 4.0, 5.0, 2.0, 4.0, 3.0, 4.0, 2.0, 4.0, 4.0, 3.0, 6.0, 5.0, 3.0, 2.0, 2.0, 4.0, 4.0, 2.0, 3.0, 2.0, 1.0, 2.0, 3.0, 6.0, 4.0, 4.0, 5.0, 4.0, 4.0, 6.0, 2.0, 2.0, 4.0, 1.0, 5.0, 2.0, 2.0, 5.0, 2.0, 6.0, 4.0, 3.0, 5.0, 3.0, 4.0, 4.0, 6.0, 5.0, 5.0, 4.0, 5.0, 4.0, 4.0, 4.0, 2.0, 4.0, 4.0, 6.0, 2.0, 2.0, 4.0, 6.0, 1.0, 4.0, 6.0, 5.0, 3.0, 6.0, 1.0, 4.0, 5.0, 6.0, 4.0, 5.0, 5.0, 1.0, 3.0, 2.0, 2.0, 2.0, 4.0, 4.0, 4.0, 4.0, 5.0, 4.0, 6.0, 3.0, 4.0, 5.0, 5.0, 5.0, 6.0, 5.0, 4.0, 2.0, 3.0, 5.0, 6.0, 3.0, 5.0, 3.0, 4.0, 2.0, 7.0, 4.0, 5.0, 4.0, 4.0, 4.0, 4.0, 4.0, 3.0, 2.0, 1.0, 3.0, 4.0, 5.0, 1.0, 4.0, 4.0, 3.0, 5.0, 4.0, 4.0, 4.0, 6.0, 4.0, 3.0, 5.0, 4.0, 5.0, 6.0, 3.0, 4.0, 5.0, 3.0, 4.0, 4.0, 3.0, 6.0, 4.0, 3.0, 3.0, 4.0, 3.0, 4.0, 4.0, 4.0, 4.0, 4.0, 5.0, 6.0, 4.0, 4.0, 2.0, 3.0, 4.0, 6.0, 4.0, 6.0, 6.0, 6.0, 4.0, 3.0, 5.0, 4.0, 2.0, 5.0, 4.0, 4.0, 2.0, 4.0, 4.0, 4.0, 4.0, 4.0, 4.0, 4.0, 5.0, 4.0, 2.0, 4.0, 6.0, 2.0, 3.0, 3.0, 6.0, 6.0, 2.0, 4.0, 5.0, 5.0, 5.0, 3.0, 4.0, 3.0, 5.0, 5.0, 5.0, 6.0, 6.0, 5.0, 5.0, 4.0, 2.0, 6.0, 4.0, 3.0, 4.0, 4.0, 1.0, 3.0, 6.0, 6.0, 3.0, 5.0, 4.0, 4.0, 3.0, 5.0, 4.0, 2.0, 6.0, 4.0, 3.0, 4.0, 4.0, 3.0, 2.0, 5.0, 5.0, 4.0, 4.0, 5.0, 5.0, 2.0, 5.0, 6.0, 4.0, 6.0, 3.0, 3.0, 2.0, 5.0, 2.0, 3.0, 4.0, 3.0, 2.0, 3.0, 3.0, 4.0, 5.0, 2.0, 5.0, 5.0, 2.0, 3.0, 3.0, 6.0, 2.0, 2.0, 2.0, 2.0, 4.0, 5.0, 4.0, 4.0, 6.0, 3.0, 4.0, 4.0, 3.0, 4.0, 4.0, 4.0, 6.0, 5.0, 5.0, 3.0, 4.0, 4.0, 5.0, 5.0, 5.0, 4.0, 4.0, 2.0, 5.0, 6.0, 4.0, 4.0, 6.0, 1.0, 5.0, 3.0, 3.0, 5.0, 6.0, 4.0, 2.0, 3.0, 5.0, 3.0, 5.0, 2.0, 2.0, 4.0, 4.0, 2.0, 4.0, 4.0, 5.0, 4.0, 5.0, 2.0, 6.0, 3.0, 4.0, 5.0, 5.0, 4.0, 3.0, 2.0, 4.0, 6.0, 6.0, 4.0, 7.0, 7.0, 4.0, 5.0, 4.0, 4.0, 4.0, 4.0, 5.0, 4.0, 6.0, 5.0, 5.0, 4.0, 3.0, 6.0, 3.0, 2.0, 2.0, 2.0, 4.0, 4.0, 5.0, 4.0, 4.0, 6.0, 2.0, 7.0, 4.0, 3.0, 4.0, 6.0, 7.0, 5.0, 2.0, 5.0, 5.0, 5.0, 6.0, 3.0, 4.0, 2.0, 2.0, 6.0, 6.0, 6.0, 5.0, 4.0, 5.0, 3.0, 5.0, 2.0, 4.0, 2.0, 2.0, 4.0, 5.0, 5.0, 6.0, 6.0, 4.0, 5.0, 5.0, 4.0, 4.0, 5.0, 3.0, 6.0, 3.0, 6.0, 5.0, 1.0, 6.0, 4.0, 3.0, 3.0, 5.0, 2.0, 5.0, 4.0, 6.0, 5.0, 5.0, 4.0, 4.0, 5.0, 4.0, 6.0, 4.0, 4.0, 4.0, 3.0, 3.0, 5.0, 7.0, 4.0, 4.0, 4.0, 5.0, 4.0, 4.0, 2.0, 4.0, 5.0, 6.0, 2.0, 6.0, 4.0, 4.0, 6.0, 6.0, 3.0, 4.0, 2.0, 4.0, 3.0, 4.0, 4.0, 4.0, 5.0, 2.0, 5.0, 4.0, 5.0, 7.0, 4.0, 4.0, 4.0, 6.0, 2.0, 3.0, 5.0, 5.0, 5.0, 4.0, 3.0, 3.0, 5.0, 6.0, 4.0, 4.0, 5.0, 6.0, 6.0, 5.0, 6.0, 3.0, 4.0, 5.0, 5.0, 3.0, 4.0, 3.0, 4.0, 4.0, 4.0, 6.0, 4.0, 4.0, 3.0, 5.0, 4.0, 4.0, 3.0, 2.0, 5.0, 4.0, 4.0, 4.0, 4.0, 2.0, 4.0, 4.0, 4.0, 4.0, 3.0, 5.0, 4.0, 6.0, 3.0, 5.0, 4.0, 4.0, 5.0, 4.0, 6.0, 4.0, 4.0, 3.0, 4.0, 5.0, 4.0, 4.0, 6.0, 2.0, 6.0, 5.0, 4.0, 4.0, 5.0, 4.0, 4.0, 4.0, 5.0, 5.0, 6.0, 4.0, 3.0, 2.0, 4.0, 5.0, 4.0, 4.0, 4.0, 4.0, 4.0, 6.0, 4.0, 4.0, 4.0, 4.0, 5.0, 4.0, 6.0, 4.0, 3.0, 4.0, 2.0, 4.0, 6.0, 1.0, 2.0, 4.0, 4.0, 4.0, 4.0, 3.0, 4.0, 4.0, 4.0, 5.0, 5.0, 4.0, 5.0, 5.0, 3.0, 3.0, 5.0, 5.0, 5.0, 6.0, 3.0, 5.0, 4.0, 4.0, 4.0, 3.0, 6.0, 4.0, 3.0, 5.0, 3.0, 4.0, 6.0, 2.0, 4.0, 4.0, 2.0, 6.0, 3.0, 3.0, 5.0, 4.0, 5.0, 4.0, 3.0, 5.0, 4.0, 6.0, 4.0, 6.0, 4.0, 3.0, 4.0, 3.0, 6.0, 4.0, 3.0, 6.0, 3.0, 4.0, 5.0, 7.0, 5.0, 5.0, 6.0, 4.0, 4.0, 5.0, 6.0, 2.0, 3.0, 4.0, 3.0, 4.0, 4.0, 5.0, 3.0, 5.0, 5.0, 5.0, 3.0, 4.0, 4.0, 4.0, 4.0, 4.0, 5.0, 4.0, 5.0, 4.0, 6.0, 2.0, 3.0, 6.0, 3.0, 6.0, 6.0, 4.0, 5.0, 5.0, 5.0, 6.0, 3.0, 2.0, 6.0, 6.0, 4.0, 5.0, 5.0, 3.0, 2.0, 4.0, 2.0, 5.0, 1.0, 4.0, 6.0, 6.0, 4.0, 6.0, 2.0, 3.0, 3.0, 4.0, 6.0, 4.0, 1.0, 7.0, 4.0, 4.0, 2.0, 4.0, 3.0, 6.0, 5.0, 3.0, 6.0, 2.0, 4.0, 3.0, 4.0, 4.0, 4.0, 4.0, 1.0, 1.0, 4.0, 3.0, 4.0, 6.0], dtype=np.float32).reshape(1330,1)
real_ideo=torch.tensor(real_ideo)
N=1330
N=torch.tensor(N)
age_discrete= np.array([1, 2, 4, 3, 3, 2, 4, 3, 3, 2, 2, 2, 4, 3, 3, 1, 1, 3, 3, 4, 4, 3, 1, 4, 1, 4, 2, 2, 4, 3, 2, 4, 2, 2, 4, 1, 3, 1, 3, 1, 1, 3, 3, 1, 1, 2, 4, 3, 2, 2, 1, 1, 4, 1, 3, 1, 4, 4, 2, 3, 3, 3, 3, 1, 4, 4, 4, 2, 1, 4, 3, 2, 3, 2, 3, 4, 4, 2, 3, 3, 4, 1, 3, 2, 2, 1, 2, 2, 3, 2, 3, 2, 2, 4, 1, 2, 2, 4, 3, 1, 1, 2, 2, 1, 1, 3, 1, 1, 1, 1, 2, 2, 3, 3, 1, 1, 2, 2, 3, 1, 1, 1, 1, 1, 2, 1, 2, 3, 4, 1, 2, 3, 1, 3, 1, 2, 3, 1, 2, 3, 2, 3, 1, 2, 2, 1, 1, 3, 4, 4, 2, 4, 3, 3, 1, 4, 4, 4, 2, 3, 3, 2, 3, 3, 2, 1, 1, 3, 2, 2, 1, 1, 1, 1, 4, 2, 3, 1, 2, 2, 3, 1, 3, 3, 2, 2, 2, 3, 4, 2, 3, 3, 1, 3, 3, 3, 3, 1, 3, 3, 2, 3, 2, 3, 1, 3, 3, 4, 2, 4, 1, 4, 2, 2, 1, 4, 2, 1, 1, 2, 2, 1, 3, 1, 2, 4, 4, 2, 3, 2, 4, 3, 3, 2, 2, 1, 3, 2, 2, 1, 2, 4, 2, 3, 4, 1, 4, 3, 3, 3, 3, 1, 1, 3, 3, 4, 2, 1, 2, 1, 3, 2, 2, 3, 1, 1, 2, 1, 1, 4, 1, 1, 4, 1, 3, 4, 1, 3, 4, 3, 1, 2, 1, 3, 3, 4, 2, 2, 2, 1, 3, 3, 3, 3, 1, 2, 1, 3, 1, 3, 2, 2, 3, 2, 3, 4, 3, 2, 3, 4, 1, 1, 3, 2, 3, 1, 1, 1, 1, 4, 1, 3, 2, 2, 2, 3, 2, 3, 3, 3, 1, 1, 4, 3, 1, 3, 2, 3, 4, 2, 3, 3, 1, 3, 2, 3, 1, 4, 3, 2, 2, 3, 4, 1, 1, 4, 4, 2, 2, 2, 2, 3, 2, 3, 3, 1, 3, 4, 4, 3, 3, 1, 3, 4, 3, 2, 3, 1, 1, 2, 3, 1, 1, 4, 1, 2, 1, 4, 4, 3, 2, 1, 3, 2, 1, 2, 2, 4, 1, 4, 2, 4, 1, 1, 1, 1, 1, 3, 2, 3, 1, 3, 3, 2, 1, 3, 1, 1, 3, 4, 1, 3, 4, 2, 2, 3, 1, 1, 4, 1, 1, 2, 4, 3, 1, 4, 2, 4, 1, 4, 3, 2, 1, 3, 4, 1, 3, 4, 2, 3, 3, 3, 2, 3, 3, 2, 4, 2, 2, 1, 1, 3, 2, 1, 1, 3, 4, 1, 4, 3, 1, 1, 3, 2, 1, 1, 3, 2, 3, 4, 2, 3, 1, 3, 2, 2, 1, 1, 1, 1, 2, 2, 3, 1, 1, 4, 3, 3, 2, 2, 3, 3, 2, 2, 4, 4, 4, 3, 1, 3, 3, 3, 2, 1, 3, 2, 1, 2, 1, 2, 2, 4, 3, 3, 3, 3, 2, 2, 1, 2, 3, 4, 2, 3, 2, 1, 4, 2, 2, 1, 2, 1, 3, 3, 3, 2, 3, 3, 3, 2, 4, 2, 1, 2, 2, 2, 3, 1, 2, 1, 4, 3, 2, 1, 2, 2, 1, 3, 2, 1, 2, 2, 3, 2, 1, 3, 3, 1, 3, 2, 2, 1, 1, 2, 2, 2, 2, 3, 2, 3, 1, 1, 2, 1, 3, 2, 3, 1, 3, 1, 2, 2, 3, 3, 3, 1, 3, 1, 2, 3, 2, 4, 3, 1, 3, 3, 3, 3, 2, 1, 3, 3, 1, 2, 1, 3, 3, 2, 3, 1, 3, 3, 3, 1, 1, 2, 3, 1, 3, 3, 3, 1, 1, 4, 3, 2, 3, 4, 1, 2, 1, 4, 2, 1, 2, 1, 1, 3, 2, 3, 1, 2, 2, 3, 2, 3, 3, 1, 1, 3, 3, 2, 3, 4, 4, 2, 1, 4, 1, 1, 3, 3, 2, 1, 1, 2, 2, 3, 2, 3, 2, 4, 1, 3, 3, 1, 1, 1, 4, 4, 1, 1, 1, 3, 3, 4, 2, 1, 3, 3, 2, 3, 2, 1, 3, 1, 2, 4, 4, 1, 1, 1, 2, 2, 3, 3, 3, 1, 2, 2, 1, 2, 1, 3, 2, 1, 1, 1, 4, 1, 3, 1, 1, 3, 3, 3, 3, 3, 1, 3, 2, 1, 3, 3, 3, 3, 3, 3, 3, 2, 3, 2, 2, 1, 1, 1, 1, 1, 3, 3, 2, 1, 3, 3, 4, 2, 1, 2, 3, 3, 3, 3, 1, 2, 3, 2, 2, 4, 1, 3, 3, 2, 1, 3, 3, 3, 1, 1, 1, 2, 3, 1, 3, 2, 4, 1, 4, 2, 1, 1, 3, 1, 2, 1, 4, 1, 1, 2, 1, 3, 1, 2, 2, 3, 2, 1, 4, 1, 1, 2, 2, 1, 1, 3, 4, 1, 4, 4, 3, 1, 2, 3, 2, 3, 3, 2, 4, 3, 1, 1, 2, 1, 3, 1, 2, 3, 1, 1, 1, 4, 1, 3, 3, 3, 4, 1, 1, 1, 1, 2, 1, 4, 2, 2, 3, 1, 2, 3, 2, 2, 3, 1, 1, 2, 4, 3, 1, 3, 2, 3, 4, 3, 4, 4, 2, 1, 3, 4, 3, 3, 2, 4, 1, 2, 1, 3, 2, 2, 1, 1, 3, 4, 4, 2, 1, 2, 2, 1, 2, 3, 2, 4, 1, 3, 1, 2, 1, 1, 3, 4, 1, 4, 3, 3, 1, 3, 4, 3, 1, 3, 1, 2, 1, 1, 1, 4, 3, 3, 1, 3, 1, 1, 2, 3, 3, 2, 2, 2, 2, 2, 2, 3, 1, 3, 3, 1, 2, 1, 2, 3, 1, 4, 1, 3, 3, 1, 1, 1, 3, 4, 2, 3, 4, 2, 3, 3, 2, 4, 2, 3, 2, 2, 3, 3, 2, 1, 3, 3, 1, 2, 2, 3, 2, 3, 3, 1, 3, 4, 4, 3, 2, 4, 3, 3, 3, 1, 1, 1, 3, 3, 1, 3, 1, 2, 1, 2, 1, 3, 1, 4, 3, 1, 1, 2, 3, 4, 4, 1, 4, 2, 3, 3, 2, 3, 1, 2, 3, 2, 4, 2, 1, 1, 3, 3, 1, 2, 2, 3, 4, 3, 1, 3, 2, 2, 3, 3, 3, 3, 3, 1, 3, 3, 4, 3, 4, 1, 2, 2, 2, 1, 2, 3, 3, 2, 1, 3, 3, 2, 1, 2, 3, 1, 1, 3, 3, 1, 1, 2, 3, 2, 4, 3, 4, 1, 3, 3, 2, 2, 1, 2, 2, 2, 1, 1, 4, 3, 4, 3, 3, 3, 2, 3, 3, 2, 1, 2, 2, 2, 1, 1, 1, 2, 4, 2, 1, 2, 4, 4, 1, 1, 2, 2, 2, 4, 2, 2, 1, 1, 2, 2, 3, 2, 3, 4, 3, 1, 1, 4, 2, 3, 3, 3, 1, 1, 1, 2, 2, 3, 3, 4, 1, 2, 2, 3, 3, 1, 3, 2, 1, 2, 3, 3, 2, 3, 1, 3, 2, 1, 3, 3, 1, 1, 2, 2, 3, 3, 3, 1, 1, 2, 3, 3, 2, 1, 1, 2, 1, 3, 1, 1, 3, 3, 1, 1, 4, 1, 3, 2, 1, 1, 1, 3, 1, 2, 1, 3, 1, 2, 4, 2, 2, 2, 3, 1, 3, 2, 1, 1, 2, 1, 3, 2, 3, 2, 4, 2, 3, 2, 1, 1, 1, 2, 2, 1, 1, 3, 3, 1, 2, 3, 4, 2, 2, 2, 4, 2, 2, 2, 2, 3, 3, 1, 3, 4, 2, 4, 2, 2, 3, 3, 4, 2, 1, 3, 3, 4, 3, 3, 2, 2, 3, 4, 1, 2, 1, 3, 1, 3, 3, 1, 1, 1, 1, 2, 3, 2, 4, 4, 3, 2, 1, 2, 2, 2, 2, 4, 4, 3, 4, 1, 2, 1, 1, 1, 1, 3, 1, 2, 3, 2], dtype=np.float32).reshape(1330,1)
age_discrete=torch.tensor(age_discrete)
gender= np.array([1.0, 2.0, 1.0, 1.0, 2.0, 2.0, 2.0, 1.0, 2.0, 1.0, 2.0, 2.0, 1.0, 1.0, 1.0, 2.0, 1.0, 2.0, 1.0, 2.0, 1.0, 2.0, 2.0, 2.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 2.0, 1.0, 2.0, 1.0, 2.0, 1.0, 2.0, 1.0, 1.0, 1.0, 1.0, 2.0, 2.0, 2.0, 2.0, 2.0, 1.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 1.0, 2.0, 2.0, 1.0, 1.0, 1.0, 1.0, 1.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 1.0, 2.0, 1.0, 2.0, 1.0, 2.0, 2.0, 1.0, 2.0, 2.0, 1.0, 2.0, 1.0, 2.0, 2.0, 2.0, 1.0, 1.0, 1.0, 2.0, 2.0, 1.0, 2.0, 1.0, 2.0, 2.0, 2.0, 1.0, 2.0, 1.0, 2.0, 2.0, 1.0, 2.0, 2.0, 1.0, 2.0, 2.0, 2.0, 1.0, 1.0, 1.0, 2.0, 2.0, 2.0, 1.0, 2.0, 2.0, 2.0, 2.0, 2.0, 1.0, 2.0, 1.0, 2.0, 2.0, 2.0, 1.0, 1.0, 2.0, 1.0, 2.0, 2.0, 2.0, 2.0, 1.0, 2.0, 2.0, 1.0, 2.0, 1.0, 2.0, 1.0, 2.0, 2.0, 2.0, 1.0, 1.0, 2.0, 2.0, 1.0, 2.0, 2.0, 1.0, 2.0, 2.0, 2.0, 2.0, 1.0, 1.0, 2.0, 2.0, 2.0, 1.0, 1.0, 1.0, 1.0, 2.0, 1.0, 2.0, 1.0, 1.0, 2.0, 1.0, 2.0, 2.0, 2.0, 2.0, 2.0, 1.0, 1.0, 1.0, 1.0, 2.0, 1.0, 1.0, 1.0, 2.0, 1.0, 2.0, 1.0, 1.0, 2.0, 1.0, 1.0, 1.0, 2.0, 2.0, 2.0, 1.0, 1.0, 1.0, 2.0, 1.0, 1.0, 1.0, 2.0, 1.0, 2.0, 1.0, 2.0, 2.0, 2.0, 1.0, 1.0, 2.0, 2.0, 2.0, 2.0, 1.0, 2.0, 1.0, 1.0, 1.0, 2.0, 1.0, 1.0, 1.0, 2.0, 2.0, 1.0, 1.0, 2.0, 1.0, 1.0, 1.0, 2.0, 2.0, 1.0, 2.0, 2.0, 1.0, 2.0, 1.0, 1.0, 1.0, 2.0, 2.0, 2.0, 1.0, 1.0, 2.0, 2.0, 1.0, 2.0, 1.0, 1.0, 2.0, 1.0, 1.0, 2.0, 2.0, 1.0, 1.0, 2.0, 1.0, 1.0, 2.0, 2.0, 2.0, 1.0, 2.0, 2.0, 1.0, 2.0, 2.0, 2.0, 1.0, 1.0, 2.0, 2.0, 1.0, 1.0, 2.0, 1.0, 1.0, 1.0, 2.0, 2.0, 1.0, 1.0, 1.0, 2.0, 2.0, 2.0, 1.0, 2.0, 2.0, 2.0, 2.0, 1.0, 1.0, 1.0, 1.0, 2.0, 1.0, 1.0, 2.0, 1.0, 1.0, 2.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 2.0, 2.0, 1.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 1.0, 1.0, 2.0, 1.0, 2.0, 2.0, 1.0, 2.0, 2.0, 2.0, 1.0, 2.0, 1.0, 1.0, 1.0, 2.0, 2.0, 2.0, 2.0, 2.0, 1.0, 1.0, 2.0, 1.0, 1.0, 1.0, 2.0, 2.0, 2.0, 1.0, 2.0, 2.0, 1.0, 1.0, 1.0, 2.0, 2.0, 1.0, 2.0, 1.0, 1.0, 1.0, 2.0, 1.0, 2.0, 1.0, 2.0, 1.0, 2.0, 2.0, 2.0, 2.0, 1.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 1.0, 2.0, 1.0, 2.0, 2.0, 2.0, 1.0, 1.0, 1.0, 2.0, 1.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 1.0, 1.0, 2.0, 2.0, 1.0, 2.0, 1.0, 2.0, 1.0, 2.0, 1.0, 2.0, 2.0, 2.0, 2.0, 1.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 1.0, 2.0, 2.0, 1.0, 1.0, 2.0, 2.0, 1.0, 1.0, 1.0, 1.0, 1.0, 2.0, 2.0, 1.0, 2.0, 2.0, 2.0, 1.0, 1.0, 1.0, 2.0, 2.0, 2.0, 2.0, 1.0, 2.0, 2.0, 1.0, 2.0, 2.0, 1.0, 1.0, 1.0, 1.0, 2.0, 2.0, 1.0, 2.0, 2.0, 2.0, 2.0, 1.0, 1.0, 2.0, 2.0, 2.0, 1.0, 2.0, 1.0, 2.0, 2.0, 1.0, 1.0, 2.0, 2.0, 1.0, 1.0, 2.0, 1.0, 2.0, 1.0, 1.0, 1.0, 2.0, 2.0, 1.0, 1.0, 2.0, 1.0, 1.0, 1.0, 2.0, 2.0, 2.0, 2.0, 2.0, 1.0, 2.0, 2.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 2.0, 2.0, 1.0, 1.0, 2.0, 2.0, 2.0, 2.0, 2.0, 1.0, 2.0, 2.0, 1.0, 2.0, 1.0, 2.0, 1.0, 1.0, 1.0, 2.0, 1.0, 2.0, 1.0, 2.0, 1.0, 1.0, 1.0, 1.0, 2.0, 1.0, 2.0, 2.0, 2.0, 1.0, 1.0, 1.0, 2.0, 1.0, 1.0, 1.0, 2.0, 2.0, 2.0, 1.0, 1.0, 2.0, 2.0, 2.0, 2.0, 1.0, 2.0, 1.0, 1.0, 1.0, 1.0, 2.0, 1.0, 2.0, 2.0, 2.0, 2.0, 2.0, 1.0, 2.0, 2.0, 1.0, 1.0, 1.0, 2.0, 2.0, 1.0, 1.0, 1.0, 1.0, 2.0, 1.0, 1.0, 2.0, 1.0, 1.0, 1.0, 2.0, 2.0, 2.0, 2.0, 2.0, 1.0, 2.0, 2.0, 1.0, 1.0, 2.0, 2.0, 2.0, 2.0, 1.0, 1.0, 1.0, 2.0, 2.0, 1.0, 2.0, 2.0, 1.0, 2.0, 1.0, 1.0, 1.0, 2.0, 2.0, 2.0, 2.0, 1.0, 1.0, 2.0, 1.0, 1.0, 2.0, 1.0, 1.0, 1.0, 1.0, 2.0, 2.0, 1.0, 2.0, 1.0, 1.0, 2.0, 2.0, 1.0, 2.0, 2.0, 1.0, 2.0, 1.0, 2.0, 2.0, 1.0, 1.0, 2.0, 2.0, 2.0, 1.0, 1.0, 1.0, 1.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 1.0, 2.0, 2.0, 2.0, 1.0, 2.0, 1.0, 2.0, 1.0, 2.0, 2.0, 2.0, 2.0, 1.0, 2.0, 1.0, 1.0, 2.0, 1.0, 1.0, 1.0, 2.0, 1.0, 2.0, 2.0, 2.0, 2.0, 1.0, 2.0, 1.0, 2.0, 1.0, 1.0, 1.0, 2.0, 1.0, 2.0, 1.0, 2.0, 2.0, 1.0, 2.0, 2.0, 2.0, 1.0, 1.0, 2.0, 2.0, 2.0, 2.0, 2.0, 1.0, 1.0, 1.0, 1.0, 1.0, 2.0, 2.0, 2.0, 2.0, 1.0, 1.0, 1.0, 1.0, 1.0, 2.0, 1.0, 2.0, 1.0, 1.0, 2.0, 1.0, 2.0, 2.0, 2.0, 1.0, 1.0, 1.0, 2.0, 2.0, 2.0, 1.0, 2.0, 2.0, 1.0, 1.0, 1.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 1.0, 2.0, 2.0, 2.0, 2.0, 1.0, 2.0, 2.0, 2.0, 2.0, 1.0, 2.0, 2.0, 2.0, 1.0, 2.0, 1.0, 2.0, 1.0, 1.0, 2.0, 1.0, 2.0, 2.0, 2.0, 1.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 1.0, 2.0, 1.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 1.0, 2.0, 1.0, 1.0, 1.0, 2.0, 2.0, 1.0, 2.0, 2.0, 2.0, 2.0, 2.0, 1.0, 1.0, 1.0, 2.0, 1.0, 2.0, 1.0, 2.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 2.0, 1.0, 1.0, 1.0, 1.0, 1.0, 2.0, 2.0, 1.0, 1.0, 1.0, 2.0, 1.0, 2.0, 2.0, 1.0, 2.0, 1.0, 1.0, 1.0, 2.0, 2.0, 1.0, 1.0, 1.0, 2.0, 2.0, 2.0, 1.0, 2.0, 2.0, 1.0, 2.0, 2.0, 2.0, 2.0, 2.0, 1.0, 1.0, 2.0, 2.0, 1.0, 2.0, 2.0, 2.0, 1.0, 1.0, 2.0, 2.0, 2.0, 1.0, 2.0, 2.0, 2.0, 1.0, 1.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 1.0, 2.0, 2.0, 2.0, 1.0, 1.0, 1.0, 2.0, 2.0, 1.0, 1.0, 1.0, 2.0, 2.0, 2.0, 1.0, 1.0, 1.0, 2.0, 1.0, 2.0, 1.0, 1.0, 1.0, 1.0, 2.0, 1.0, 1.0, 2.0, 1.0, 2.0, 1.0, 1.0, 2.0, 1.0, 1.0, 2.0, 2.0, 1.0, 1.0, 1.0, 2.0, 1.0, 1.0, 2.0, 1.0, 2.0, 2.0, 2.0, 1.0, 1.0, 2.0, 2.0, 1.0, 2.0, 2.0, 2.0, 2.0, 2.0, 1.0, 1.0, 2.0, 2.0, 1.0, 1.0, 2.0, 2.0, 2.0, 1.0, 2.0, 2.0, 2.0, 1.0, 1.0, 1.0, 2.0, 2.0, 1.0, 1.0, 2.0, 1.0, 2.0, 1.0, 2.0, 1.0, 2.0, 1.0, 1.0, 1.0, 2.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 2.0, 1.0, 2.0, 1.0, 2.0, 2.0, 1.0, 1.0, 2.0, 2.0, 2.0, 1.0, 2.0, 1.0, 2.0, 1.0, 1.0, 2.0, 1.0, 1.0, 2.0, 1.0, 1.0, 1.0, 2.0, 1.0, 2.0, 1.0, 1.0, 2.0, 2.0, 1.0, 2.0, 1.0, 2.0, 2.0, 1.0, 1.0, 1.0, 1.0, 1.0, 2.0, 2.0, 1.0, 2.0, 2.0, 2.0, 2.0, 1.0, 1.0, 2.0, 1.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 2.0, 2.0, 2.0, 1.0, 1.0, 1.0, 2.0, 2.0, 1.0, 1.0, 2.0, 2.0, 2.0, 2.0, 1.0, 2.0, 1.0, 2.0, 2.0, 2.0, 2.0, 2.0, 1.0, 2.0, 2.0, 2.0, 1.0, 1.0, 1.0, 2.0, 1.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 1.0, 2.0, 2.0, 2.0, 2.0, 2.0, 1.0, 2.0, 1.0, 2.0, 1.0, 1.0, 2.0, 2.0, 1.0, 1.0, 2.0, 2.0, 2.0, 1.0, 2.0, 1.0, 2.0, 2.0, 1.0, 1.0, 2.0, 2.0, 2.0, 1.0, 1.0, 2.0, 2.0, 1.0, 2.0, 1.0, 2.0, 1.0, 2.0, 1.0, 1.0, 1.0, 1.0, 2.0, 2.0, 2.0, 1.0, 2.0, 1.0, 2.0, 1.0, 1.0, 1.0, 2.0, 1.0, 1.0, 2.0, 1.0, 1.0, 1.0, 2.0, 1.0, 1.0, 1.0, 1.0, 1.0, 2.0, 2.0, 1.0, 2.0, 1.0, 2.0, 1.0, 2.0, 1.0, 1.0, 2.0, 1.0, 2.0, 2.0, 2.0, 1.0, 2.0, 1.0, 2.0, 2.0, 2.0, 1.0, 2.0, 1.0, 1.0, 1.0, 2.0, 2.0, 1.0, 1.0, 2.0, 1.0, 2.0, 1.0, 1.0, 1.0, 2.0, 2.0, 2.0, 2.0, 1.0, 2.0, 1.0, 2.0, 1.0, 1.0, 1.0, 2.0, 1.0, 1.0, 1.0, 2.0, 2.0, 2.0, 1.0, 2.0, 1.0, 1.0, 1.0, 1.0, 2.0, 2.0, 2.0, 1.0, 2.0, 2.0, 1.0, 2.0, 1.0, 1.0, 2.0, 2.0, 2.0, 1.0, 1.0, 2.0, 2.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 2.0, 1.0, 1.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 1.0, 2.0, 2.0, 1.0, 1.0, 2.0, 1.0, 2.0, 2.0, 1.0, 2.0, 2.0, 1.0, 2.0, 1.0, 2.0, 1.0, 2.0, 1.0, 2.0, 1.0, 1.0, 1.0, 2.0, 2.0, 2.0, 1.0, 1.0, 2.0, 1.0, 1.0, 1.0, 1.0, 2.0, 1.0, 1.0, 2.0, 1.0, 2.0, 2.0, 2.0, 1.0, 2.0, 2.0, 1.0, 2.0, 1.0, 2.0, 1.0, 1.0, 1.0, 1.0, 1.0, 2.0, 1.0, 2.0, 1.0, 2.0, 1.0, 1.0, 1.0, 2.0, 2.0, 2.0, 1.0, 1.0, 1.0, 2.0], dtype=np.float32).reshape(1330,1)
gender=torch.tensor(gender)
race_adj= np.array([1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 2.0, 1.0, 1.0, 1.0, 1.5, 1.0, 2.0, 1.0, 2.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 2.0, 1.0, 1.5, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.5, 1.0, 1.0, 2.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.5, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 2.0, 1.0, 1.0, 1.0, 1.0, 1.0, 2.0, 1.0, 1.0, 1.0, 1.5, 1.0, 1.0, 1.0, 2.0, 1.0, 1.0, 1.0, 1.0, 1.0, 2.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 2.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 2.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 2.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 2.0, 1.0, 2.0, 2.0, 2.0, 1.5, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 2.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 2.0, 1.0, 1.0, 2.0, 2.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 2.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 2.0, 1.0, 1.0, 2.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 2.0, 1.0, 1.0, 1.0, 2.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 2.0, 1.0, 1.0, 1.0, 1.0, 2.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.5, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 2.0, 2.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 2.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.5, 1.0, 1.0, 1.0, 1.0, 2.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 2.0, 1.0, 1.0, 1.5, 1.0, 1.0, 1.0, 1.5, 1.0, 2.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 2.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.5, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 2.0, 1.0, 1.0, 1.0, 1.5, 1.0, 1.0, 1.0, 1.0, 1.0, 2.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 2.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 2.0, 1.0, 1.0, 1.0, 2.0, 1.0, 2.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 2.0, 1.0, 1.0, 1.0, 1.5, 1.0, 1.0, 1.0, 2.0, 1.0, 1.0, 1.0, 1.0, 2.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 2.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 2.0, 1.0, 2.0, 2.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 2.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.5, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.5, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 2.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 2.0, 1.5, 1.0, 1.0, 1.0, 1.0, 1.0, 2.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 2.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 2.0, 2.0, 2.0, 1.0, 1.0, 1.5, 1.0, 1.0, 1.0, 1.0, 2.0, 1.0, 1.5, 1.0, 1.0, 1.0, 2.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 2.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 2.0, 2.0, 2.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 2.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 2.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 2.0, 1.0, 1.0, 1.0, 1.0, 2.0, 1.5, 1.5, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.5, 1.5, 1.0, 1.0, 1.0, 1.5, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 2.0, 2.0, 2.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 2.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 2.0, 2.0, 1.0, 1.0, 1.0, 1.0, 1.5, 1.0, 2.0, 1.0, 1.0, 1.5, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 2.0, 2.0, 1.5, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 2.0, 1.0, 2.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.5, 1.0, 1.0, 1.0, 1.0, 2.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 2.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 2.0, 2.0, 1.0, 1.0, 1.0, 1.0, 1.5, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 2.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 2.0, 2.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 2.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 2.0, 1.0, 2.0, 2.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 2.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.5, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 2.0, 1.5, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 2.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 2.0, 1.0, 1.5, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.5, 1.0, 1.0, 1.0, 2.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 2.0, 2.0, 1.0, 1.0, 2.0, 1.0, 1.0, 1.0, 1.0, 1.0, 2.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.5, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.5, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 2.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 2.0, 2.0, 1.0, 1.0, 1.0, 1.0, 2.0, 1.0, 1.0, 1.0, 1.0, 2.0, 2.0, 1.5, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 2.0, 1.5, 1.0, 1.0, 1.0, 1.0, 2.0, 1.0, 1.0, 1.0, 1.0, 2.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0], dtype=np.float32).reshape(1330,1)
race_adj=torch.tensor(race_adj)
def model(partyid7,educ1,income,real_ideo,N,age_discrete,gender,race_adj):
    age30_44 = torch.zeros([amb(N)])
    age45_64 = torch.zeros([amb(N)])
    age65up = torch.zeros([amb(N)])
    for n in range(1, N+1):
        age30_44[n-1]=age_discrete[n-1]==2
        age45_64[n-1]=age_discrete[n-1]==3
        age65up[n-1]=age_discrete[n-1]==4
    with pyro.iarange('beta_range_'.format('')):
        beta = pyro.sample('beta'.format(''), dist.Normal(torch.tensor(1234.0)*torch.ones([amb(9)]),torch.tensor(1234.0)*torch.ones([amb(9)])))
    sigma = pyro.sample('sigma'.format(''), dist.Normal(torch.tensor(1234.0)*torch.ones([amb(1)]),torch.tensor(1234.0)*torch.ones([amb(1)])))
    pyro.sample('obs__100'.format(), dist.Normal(beta[0-1]+beta[1-1]*real_ideo+beta[2-1]*race_adj+beta[3-1]*age30_44+beta[4-1]*age45_64+beta[5-1]*age65up+beta[6-1]*educ1+beta[7-1]*gender+beta[9-1]*income,sigma), obs=partyid7)
    
def guide(partyid7,educ1,income,real_ideo,N,age_discrete,gender,race_adj):
    for n in range(1, N+1):
        pass
    arg_1 = pyro.param('arg_1', torch.ones((amb(9))), constraint=constraints.positive)
    arg_2 = pyro.param('arg_2', torch.ones((amb(9))))
    arg_3 = pyro.param('arg_3', torch.ones((amb(9))), constraint=constraints.positive)
    with pyro.iarange('beta_prange'):
        beta = pyro.sample('beta'.format(''), dist.StudentT(df=arg_1,loc=arg_2,scale=arg_3))
    arg_4 = pyro.param('arg_4', torch.ones((amb(1))), constraint=constraints.positive)
    arg_5 = pyro.param('arg_5', torch.ones((amb(1))), constraint=constraints.positive)
    sigma = pyro.sample('sigma'.format(''), dist.Pareto(arg_4,arg_5))
    
    pass
    return { "beta": beta,"sigma": sigma, }
optim = Adam({'lr': 0.05})
svi = SVI(model, guide, optim, loss=Trace_ELBO() if pyro.__version__ > '0.1.2' else 'ELBO')
for i in range(4000):
    loss = svi.step(partyid7,educ1,income,real_ideo,N,age_discrete,gender,race_adj)
    if ((i % 1000) == 0):
        print(loss)
for name in pyro.get_param_store().get_all_param_names():
    print(('{0} : {1}'.format(name, pyro.param(name).data.numpy())))
print('beta_mean', np.array2string(dist.StudentT(pyro.param('arg_1')).mean.detach().numpy(), separator=','))
print('sigma_mean', np.array2string(dist.Pareto(pyro.param('arg_4'), pyro.param('arg_5')).mean.detach().numpy(), separator=','))
np.set_printoptions(threshold=np.inf)
with open('samples','w') as samplefile:
    samplefile.write('beta:')
    samplefile.write(np.array2string(np.array([guide(partyid7,educ1,income,real_ideo,N,age_discrete,gender,race_adj)['beta'].data.numpy() for _ in range(1000)]), separator=',').replace('\n',''))
    samplefile.write('\n')
    samplefile.write('sigma:')
    samplefile.write(np.array2string(np.array([guide(partyid7,educ1,income,real_ideo,N,age_discrete,gender,race_adj)['sigma'].data.numpy() for _ in range(1000)]), separator=',').replace('\n',''))
    samplefile.write('\n')
